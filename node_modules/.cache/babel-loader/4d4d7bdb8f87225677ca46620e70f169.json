{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\n_pushScopeId(\"data-v-41233479\");\n\nconst _hoisted_1 = [\"y\"];\nconst _hoisted_2 = [\"dy\"];\n\n_popScopeId();\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"svg\", {\n    id: \"svgF\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.log())\n  }, [_createCommentVNode(\" <text id = 'tx' dx = 20 dy = 50>{{treeTypeFlag}}</text> \"), _createElementVNode(\"rect\", {\n    x: \"0\",\n    y: _ctx.heightF - 50,\n    height: \"50\",\n    width: \"60\",\n    fill: \"orange\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_1), _createElementVNode(\"text\", {\n    dx: \"30\",\n    dy: _ctx.heightF - 17,\n    \"text-anchor\": \"middle\",\n    fill: \"white\",\n    \"font-size\": \"25\",\n    \"font-weight\": \"bold\"\n  }, \"E \", 8\n  /* PROPS */\n  , _hoisted_2)]);\n}","map":{"version":3,"sources":["C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\src\\components\\componentF.vue"],"names":[],"mappings":";;;;;;;;;;uBAEE,mBAAA,CAkBK,KAlBL,EAkBK;AAlBA,IAAA,EAAE,EAAG,MAkBL;AAlBa,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAI,IAAA,CAAA,GAAA,EAAJ;AAkBlB,GAlBL,E,CACA,mBAAA,CAAA,2DAAA,C,EACA,mBAAA,CAMM,MANN,EAMM;AALP,IAAA,CAAC,EAAG,GAKG;AAJN,IAAA,CAAC,EAAI,IAAA,CAAA,OAAA,GAAO,EAIN;AAHP,IAAA,MAAM,EAAG,IAGF;AAFP,IAAA,KAAK,EAAG,IAED;AADP,IAAA,IAAI,EAAG;AACA,GANN,E,IAAA,E;;AAAA,I,UAAA,C,EAOD,mBAAA,CAQO,MARP,EAQO;AAPP,IAAA,EAAE,EAAG,IAOE;AANN,IAAA,EAAE,EAAI,IAAA,CAAA,OAAA,GAAO,EAMP;AALP,mBAAc,QAKP;AAJP,IAAA,IAAI,EAAG,OAIA;AAHP,iBAAY,IAGL;AAFP,mBAAc;AAEP,GARP,EAOC,IAPD,EAQA;AAAA;AARA,IAQA,UARA,C,CATC,C","sourcesContent":["<template>\n\t\n  <svg id = \"svgF\" @click = 'log()'>\n\t\t<!-- <text id = 'tx' dx = 20 dy = 50>{{treeTypeFlag}}</text> -->\n\t\t<rect\n\tx = 0\n\t:y = 'heightF - 50'\n\theight = 50\n\twidth = 60\n\tfill = 'orange'>\n\t</rect>\n\t<text\n\tdx = 30\n\t:dy = 'heightF - 17'\n\ttext-anchor = 'middle'\n\tfill = 'white'\n\tfont-size = 25\n\tfont-weight = 'bold'\n\t>E\n\t</text>\n\t</svg>\n\n</template>\n\n<script>\nimport * as d3 from \"d3\"\n\nimport axios from 'axios'\n\nexport default {\n\tname: 'componentF',\n\tdata(){\n\t\treturn {\n\t\t\theightF:this.$store.state.height * 0.6,\n\t\t\twidthF:this.$store.state.width * 0.3,\n\t\t\thovered:'',\n\t\t\tnodesLength:0,\n\t\t\tcomparisonMode:'sim',\n\t\t\ttipFlag:false,\n\t\t\t//matrixData:['上海市','北京市','广东省','浙江省'],\n\t\t\t//matrixData:['清华大学','北京大学','复旦大学','上海交通大学']\n\t\t\t\n\t\t\t\n\t\t}\n\t},\n\tmounted(){\n\t\t\n\t\td3.select(\"#tx\").attr(\"dy\",20)\n\t\tthis.$store.commit({\n\t\t\ttype :\"appendLine\",\n\t\t\tid :'lineF',\n\t\t\tsvg :'svgF',\n\t\t\twidth:this.widthF,\n\t\t\theight:this.heightF * 1 / 3 -20,\n\t\t\tcolor: 'mediumseagreen',\n\t\t\tstroke:1\n\t\t});\n\t\t\n\t\tthis.$store.commit({\n\t\t\ttype:'appendTitle',\n\t\t\tid:'FbarTitle',\n\t\t\tclass:'classF',\n\t\t\tsvg:'svgF',\n\t\t\tdx:'24px',\n\t\t\tdy:'36px',\n\t\t\tsize:'14px'\n\t\t\t\n\t\t});\n\t\td3.select(\"#svgF\")\n\t\t.attr(\"width\",this.widthF)\n\t\t.attr(\"height\",this.heightF);\n\t\t\n\t\t\n\t\taxios.get('province_pat_pro.json')\n\t\t.then(response=>{\n\t\t\t////console.log(response\t)\n\t\t\tthis.$store.commit({\n\t\t\t\ttype:'FprovincePro',\n\t\t\t\tprovjson:response\n\t\t\t})\n\t\t});\n\t\t\n\t\taxios.get('comp_pat_pro.json')\n\t\t.then(response=>{\n\t\t\tthis.$store.commit({\n\t\t\t\ttype:'FcompanyPro',\n\t\t\t\tprojson:response\n\t\t\t})\n\t\t})\n\t\t\n\t\taxios.get('supply_chain(1).csv')\n\t\t.then(response=>{\n\t\t\tlet a = d3.csv.parse(response.data);\n\t\t\tthis.$store.commit({\n\t\t\t\ttype :\"FindData\",\n\t\t\t\tvalue :a\n\t\t\t});\n\t\t})\n\t\t\n\t\td3.select(\"#svgF\").append(\"g\").attr(\"id\",'Fbar');\n\t\td3.select(\"#svgF\").append(\"g\").attr(\"id\",\"Fmatrix\");\n\t\tthis.$store.commit({\n\t\t\ttype:'appendBtn',\n\t\t\tsvgID:'svgF',\n\t\t\tbtnID:'Fbtn',\n\t\t\twidth:this.widthF,\n\t\t\ttext:'switch'\n\t\t})\n\t\t\n\t\td3.select(\"#Fbtn\")\n\t\t.on(\"click\",()=>{\n\t\t\tthis.modeChange();\n\t\t})\n\t\t.style(\"display\",'none')\n\t\t\n\t\tthis.appendLgd()\n\t\t\n\t\t\n\t\t\n\t},\n\tcomputed:{\n\t\tmatrixData(){\n\t\t\tlet sol = []\n\t\t\tfor(let i = 0;i<this.treeData.length;i++){\n\t\t\t\tsol.push(this.treeData[i])\n\t\t\t}\n\t\t\tfor(let i = 0;i<this.$store.state.matrixElement.length;i++){\n\t\t\t\tif(this.treeData.indexOf(this.$store.state.matrixElement[i]) == -1){\n\t\t\t\t\tsol.push(this.$store.state.matrixElement[i])\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\treturn sol\n\t\t},\n\t\tmatrixData3(){\n\t\t\treturn this.matrixData2 +'1'\n\t\t},\n\t\tmatrixData2(){\n\t\t\tlet tmp = [];\n\t\t\tif(this.treeTypeFlag == 'company'){\n\t\t\t\tfor(let i = 0;i<this.matrixData.length;i++){\n\t\t\t\t\tfor(let j = 0;j<this.matrixData.length;j++){\n\t\t\t\t\t\tif(this.comparisonMode == 'sim'){\n\t\t\t\t\t\t\ttmp.push({x:i,y:j,rate:this.sim(this.matrixData[i],this.matrixData[j],this.projson)})\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(this.comparisonMode == 'complement'){\n\t\t\t\t\t\t\ttmp.push({x:i,y:j,rate:this.complement(this.matrixData[i],this.matrixData[j],this.projson)})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this.treeTypeFlag =='province'){\n\t\t\t\tfor(let i = 0;i<this.matrixData.length;i++){\n\t\t\t\t\tfor(let j = 0;j<this.matrixData.length;j++){\n\t\t\t\t\t\tif(this.comparisonMode == 'sim'){\n\t\t\t\t\t\t\ttmp.push({x:i,y:j,rate:this.sim(this.matrixData[i].substring(0,2),this.matrixData[j].substring(0,2),this.provjson)})\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(this.comparisonMode == 'complement'){\n\t\t\t\t\t\t\ttmp.push({x:i,y:j,rate:this.complement(this.matrixData[i].substring(0,2),this.matrixData[j].substring(0,2),this.provjson)})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tmp\n\t\t},\n\t\ttreeData1(){\n\t\t\treturn this.treeData[0]? this.treeData[0]:''\n\t\t},\n\t\tbar_data1(){\n\t\t\treturn this.bar_data +'1'\n\t\t},\n\t\tbar_data(){\n\t\t\tlet a = [];\n\t\t\tlet b = [];\n\t\t\t\n\t\t\tlet c = [];\n\t\t\tif(this.treeData[0] && this.treeTypeFlag == 'company'){\n\t\t\t\td3.select(\"#svgD\").selectAll(\"circle\")\n\t\t\t\t.filter((d,i)=>{\n\t\t\t\t\tif(i>0){\n\t\t\t\t\t\ta.push(d.name);\n\t\t\t\t\t}\n\t\t\t\t}) \n\t\t\t\ta = a.filter(d=>d!=this.treeData[0])\n\t\t\t\tfor(let i = 0;i<a.length;i++){\n\t\t\t\t\tif(this.comparisonMode == 'sim'){\n\t\t\t\t\t\tb.push({name:a[i],rate:this.sim(a[i],this.treeData[0],this.projson)})\n\t\t\t\t\t}\n\t\t\t\t\telse if(this.comparisonMode == 'complement'){\n\t\t\t\t\t\tb.push({name:a[i],rate:this.complement(a[i],this.treeData[0],this.projson)})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tb.sort((a,b)=>{\n\t\t\t\t\treturn b.rate - a.rate\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tc = b.slice(0,5);\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\telse if(this.treeData[0] && this.treeTypeFlag == 'province'){\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfor(let i = 0;i<this.$store.state.province.length;i++){\n\t\t\t\t\ta.push(this.$store.state.province[i].substring(0,2))\n\t\t\t\t}\n\t\t\t\ta = a.filter(d=>d!=this.treeData[0].substring(0,2));\n\t\t\t\tfor(let i = 0;i<a.length;i++){\n\t\t\t\t\tif(this.comparisonMode == 'sim'){\n\t\t\t\t\t\tb.push({name:this.transform(a[i]),rate:this.sim(a[i],this.treeData[0].substring(0,2),this.provjson)})\n\t\t\t\t\t}\n\t\t\t\t\telse if(this.comparisonMode =='complement'){\n\t\t\t\t\t\tb.push({name:this.transform(a[i]),rate:this.complement(a[i],this.treeData[0].substring(0,2),this.provjson)})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tb.sort((a,b)=>{\n\t\t\t\t\treturn b.rate - a.rate\n\t\t\t\t})\n\t\t\t\tc = b.slice(0,5);\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\treturn c\n\t\t},\n\t\tprovince(){\n\t\t\treturn this.$store.state.province\n\t\t},\n\t\ttreeTypeFlag(){\n\t\t\treturn this.$store.state.treeTypeFlag\n\t\t},\n\t\ttreeData(){\n\t\t\treturn this.$store.state.objB.treeData\n\t\t},\n\t\ttreeD(){\n\t\t\treturn this.treeData + '1'\n\t\t},\n\t\tprovjson(){\n\t\t\treturn this.$store.state.objF.provjson\n\t\t},\n\t\tprojson(){\n\t\t\treturn this.$store.state.objF.projson\n\t\t},\n\t\tF_indData(){\n\t\t\tlet k = [];\n\t\t\tfor(let i = 0;i<this.$store.state.objF.indData.length;i++){\n\t\t\t\tif(k.indexOf(this.$store.state.objF.indData[i].industry_name)==-1){\n\t\t\t\t\tk.push(this.$store.state.objF.indData[i].industry_name)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k\n\t\t}\n\t},\n\tmethods:{\n\t\tlog(){\n\t\t\tconsole.log(this.treeData)\n\t\t\tconsole.log(this.$store.state.matrixElement)\n\t\t},\n\t\tF_TipRemove(){\n\t\t\td3.select(\"#svgF\").selectAll(\".tips\")\n\t\t\t.remove()\n\t\t},\n\t\tF_createTip(d){\n\t\t\tfunction mouseXY(e){\n\t\t\t\t\t\t\te=e||window.event;\n\t\t\t\t\t\t\treturn { \"x\": e.offsetX, \"y\": e.offsetY };\n\t\t\t\t\t\t}\n\t\t\tlet XY = mouseXY(event);\n\t\t\tlet tempWidth = this.matrixData[d.x].length>8 || this.matrixData[d.y].length>8?  Math.max(this.matrixData[d.x].length,this.matrixData[d.y].length)*15 +10 :160\n\t\t\tlet svgF = d3.select(\"#svgF\")\n\t\t\tlet txt = this.comparisonMode == 'sim'? '结构相似性系数:':'互补性系数:'\n\t\t\t\n\t\t\tif(XY.x>0 && XY.x < this.widthF - tempWidth ){\n\t\t\t\tsvgF.append(\"rect\")\n\t\t\t\t.attr(\"id\",\"tipBack\")\n\t\t\t\t.attr(\"class\",\"tips\")\n\t\t\t\t.attr(\"x\", XY.x+10)\n\t\t\t\t.attr(\"y\",XY.y-30)\n\t\t\t\t.style(\"height\",80)\n\t\t\t\t.style(\"width\",tempWidth)\n\t\t\t\t.attr(\"rx\",20);\n\t\t\t\t\n\t\t\t\tsvgF.append(\"text\")\n\t\t\t\t.attr(\"class\",\"tips\")\n\t\t\t\t.attr(\"dx\",XY.x+20)\n\t\t\t\t.attr(\"dy\",XY.y-5)\n\t\t\t\t.attr(\"text-anchor\",\"start\")\n\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t.attr(\"font-size\", \"14px\")\n\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t.attr(\"fill\", \"#e34b00\")\n\t\t\t\t//.text(this.matrixData[d.y])\n\t\t\t\t.text('company/province ***')\n\t\t\t\t\n\t\t\t\tsvgF.append(\"text\")\n\t\t\t\t.attr(\"class\",\"tips\")\n\t\t\t\t.attr(\"dx\",XY.x+20)\n\t\t\t\t.attr(\"dy\",XY.y+15)\n\t\t\t\t\n\t\t\t\t.attr(\"text-anchor\",\"start\")\n\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t.attr(\"font-size\", \"14px\")\n\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t.attr(\"fill\", \"#9eea74\")\n\t\t\t\t//.text(this.matrixData[d.x]) ;\n\t\t\t\t.text('company/province ***')\n\t\t\t\tsvgF.append(\"text\")\n\t\t\t\t.attr(\"class\",\"tips\")\n\t\t\t\t.attr(\"dx\",XY.x+20)\n\t\t\t\t.attr(\"dy\",XY.y+35)\n\t\t\t\t.attr(\"text-anchor\",\"start\")\n\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t.attr(\"font-size\", \"14px\")\n\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t.attr(\"fill\", \"white\")\n\t\t\t\t.text(txt+d.rate.toFixed(3))\n\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsvgF.append(\"rect\")\n\t\t\t\t\t.attr(\"id\",\"tipBack\")\n\t\t\t\t\t.attr(\"class\",\"tips\")\n\t\t\t\t\t.attr(\"x\", XY.x- 10 - tempWidth)\n\t\t\t\t\t.attr(\"y\",XY.y-30)\n\t\t\t\t\t.style(\"height\",80)\n\t\t\t\t\t.style(\"width\",tempWidth)\n\t\t\t\t\t.attr(\"rx\",20);\n\t\t\t\t\t\n\t\t\t\t\tsvgF.append(\"text\")\n\t\t\t\t\t.attr(\"class\",\"tips\")\n\t\t\t\t\t.attr(\"dx\",XY.x- tempWidth)\n\t\t\t\t\t.attr(\"dy\",XY.y-5)\n\t\t\t\t\t.attr(\"text-anchor\",\"start\")\n\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t\t.attr(\"font-size\", \"14px\")\n\t\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t\t.attr(\"fill\", \"#e34b00\")\n\t\t\t\t\t//.text(this.matrixData[d.y])\n\t\t\t\t\t.text('company/province ***')\n\t\t\t\t\tsvgF.append(\"text\")\n\t\t\t\t\t.attr(\"class\",\"tips\")\n\t\t\t\t\t.attr(\"dx\",XY.x- tempWidth)\n\t\t\t\t\t.attr(\"dy\",XY.y+15)\n\t\t\t\t\t\n\t\t\t\t\t.attr(\"text-anchor\",\"start\")\n\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t\t.attr(\"font-size\", \"14px\")\n\t\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t\t.attr(\"fill\", \"#9eea74\")\n\t\t\t\t\t//.text(this.matrixData[d.x]) ;\n\t\t\t\t\t.text('company/province ***')\n\t\t\t\t\tsvgF.append(\"text\")\n\t\t\t\t\t.attr(\"class\",\"tips\")\n\t\t\t\t\t.attr(\"dx\",XY.x- tempWidth)\n\t\t\t\t\t.attr(\"dy\",XY.y+35)\n\t\t\t\t\t.attr(\"text-anchor\",\"start\")\n\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t\t.attr(\"font-size\", \"14px\")\n\t\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t\t.attr(\"fill\", \"white\")\n\t\t\t\t\t.text(txt+d.rate.toFixed(3))\n\t\t\t\t}\n\t\t\n\t\t\n\t\t},\n\t\tappendLgd(){\n\t\t\tlet defs = d3.select(\"#svgF\").append(\"defs\");\n\t\t\tlet linearGradient2 = defs.append(\"linearGradient\")\n\t\t\t\t\t\t\t\t\t.attr(\"id\",\"linearColor2\")\n\t\t\t\t\t\t\t\t\t.attr(\"x1\",\"0%\")\n\t\t\t\t\t\t\t\t\t.attr(\"y1\",\"0%\")\n\t\t\t\t\t\t\t\t\t.attr(\"x2\",\"100%\")\n\t\t\t\t\t\t\t\t\t.attr(\"y2\",\"0%\");\n\t\t\tlinearGradient2.append(\"stop\")\n\t\t\t\t\t\t\t.attr(\"offset\",\"0%\")\n\t\t\t\t\t\t\t.style(\"stop-color\",\"#c1e8ca\");\n\t\t\tlinearGradient2.append(\"stop\")\n\t\t\t\t\t\t\t.attr(\"offset\",\"100%\")\n\t\t\t\t\t\t\t.style(\"stop-color\",\"#48784f\");\n\t\t\t\t\t\t\t\n\t\t\td3.select(\"#svgF\").append(\"rect\")\t\t\t\t\n\t\t\t.attr(\"class\",\"lgd1\")\n\t\t\t.attr(\"x\",this.widthF/5)\n\t\t\t.attr(\"rx\",6)\n\t\t\t.attr(\"y\",this.heightF/5 * 2 - 10)\n\t\t\t.attr(\"width\",this.widthF/5 * 3 )\n\t\t\t.attr(\"height\",12)\n\t\t\t.style(\"fill\",\"url(#\" + linearGradient2.attr(\"id\") + \")\");\t\n\t\t\t\t\t\n\t\t\td3.select(\"#svgF\").append(\"text\")\n\t\t\t\t.attr(\"class\",\"lgd1\")\n\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t.style(\"font-size\", \"20px\")\n\t\t\t\t.attr(\"dx\",\"24px\")\n\t\t\t\t.attr(\"dy\",this.heightF/3 +10)\n\t\t\t\t.style(\"font-weight\",\"bold\")\n\t\t\t\t.attr(\"text-anchor\",\"start\")\n\t\t\t\t.text(\"结构相似性系数矩阵\")\n\t\t\t\t\n\t\t\td3.select(\"#svgF\").append(\"text\")\n\t\t\t.attr(\"class\",\"lgd1\")\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.style(\"font-size\", 15)\n\t\t\t.attr(\"dx\",this.widthF/5 -15)\n\t\t\t.style(\"font-weight\",\"bold\")\n\t\t\t.attr(\"dy\",this.heightF/5 * 2 + 5 )\n\t\t\t.text(0);\n\t\t\t\n\t\t\td3.select(\"#svgF\").append(\"text\")\n\t\t\t.attr(\"class\",\"lgd1\")\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.style(\"font-size\", 15)\n\t\t\t.style(\"font-weight\",\"bold\")\n\t\t\t.attr(\"dx\",this.widthF/5  + this.widthF/5 *3 +5 )\n\t\t\t.attr(\"dy\",this.heightF/5 * 2 + 5 )\n\t\t\t.text(1)\n\t\t\t\t\t\t\n\t\t\td3.select(\"#svgF\").selectAll(\".lgd1\")\n\t\t\t.style(\"display\",'none')\n\t\t\t\n\t\t},\n\t\tmodeChange(){\n\t\t\tif(this.comparisonMode=='sim'){\n\t\t\t\tthis.comparisonMode='complement'\n\t\t\t\tthis.$store.commit({\n\t\t\t\t\ttype:'userClick',\n\t\t\t\t\tview:'viewF',\n\t\t\t\t\twidth:this.widthF,\n\t\t\t\t\theight:this.heightF,\n\t\t\t\t\tobj:'switch(comparison mode)',\n\t\t\t\t\tname:this.treeData[0],\n\t\t\t\t\tvalue:'complement',\n\t\t\t\t\tdesc:'show the complementarity of ' + this.treeData[0] + ' and others',\n\t\t\t\t\tvisualKeys:{}\n          data:{\n            industry:'',\n            company:this.treeTypeFlag == 'company'?[this.treeData[0]]:[],\n            province:this.treeTypeFlag == 'province'?[this.treeData[0]]:[],\n            attribute:'complement'\n          }\n\t\t\t\t})\n\t\t\t}\n\t\t\telse if(this.comparisonMode=='complement'){\n\t\t\t\tthis.comparisonMode='sim'\n\t\t\t\tthis.$store.commit({\n\t\t\t\t\ttype:'userClick',\n\t\t\t\t\tview:'viewF',\n\t\t\t\t\twidth:this.widthF,\n\t\t\t\t\theight:this.heightF,\n\t\t\t\t\tobj:'switch(comparison mode)',\n\t\t\t\t\tname:this.treeData[0],\n\t\t\t\t\tvalue:'similarity',\n\t\t\t\t\tdesc:'show the similarity of ' + this.treeData[0] + ' and others',\n          data:{\n            industry:'',\n            company:this.treeTypeFlag == 'company'?[this.treeData[0]]:[],\n            province:this.treeTypeFlag == 'province'?[this.treeData[0]]:[],\n            attribute:'similarity'\n          }\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis.updateBar()\n\t\t},\n\t\ttransform(name){\n\t\t\tfor(let i = 0;i<this.$store.state.province.length;i++){\n\t\t\t\tif (this.$store.state.province[i].substring(0,2) == name.substring(0,2)){\n\t\t\t\t\treturn this.$store.state.province[i]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tupdateBar(){\n\t\t\tlet bar_color = d3.scale.category20();\n\t\t\tlet bar_scale = d3.scale.linear().domain([this.bar_data[this.bar_data.length-1].rate,this.bar_data[0].rate]).range([70,this.widthF/3]);\n\t\t\tlet pd = 10,wd = 8;\n\t\t\tlet bar = d3.select(\"#Fbar\")\n\t\t\t\n\t\t\tbar.selectAll('rect')\n\t\t\t.data(this.bar_data)\n\t\t\t.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.attr(\"class\",\"bar1\")\n\t\t\t.attr(\"height\",wd)\n\t\t\t.attr(\"width\",0)\n\t\t\t.on(\"mouseover\",function(){\n\t\t\t\td3.select(this)\n\t\t\t\t.attr(\"stroke-width\",1)\n\t\t\t\t.attr(\"stroke\",'red')\n\t\t\t})\n\t\t\t.on(\"mouseout\",function(){\n\t\t\t\td3.select(this)\n\t\t\t\t.attr(\"stroke-width\",0)\n\t\t\t\t\n\t\t\t})\n\t\t\t.on(\"click\",(d)=>{\n\t\t\t\tthis.$store.commit({\n\t\t\t\t\ttype:'updateTreeData',\n\t\t\t\t\tname:d.name,\n\t\t\t\t\ttreeTypeFlag:this.treeTypeFlag\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.$store.commit({\n\t\t\t\t\ttype:'userClick',\n\t\t\t\t\tview:'viewF',\n\t\t\t\t\twidth:this.widthF,\n\t\t\t\t\theight:this.heightF,\n\t\t\t\t\tobj:this.treeTypeFlag == 'company'? 'select company':'select province',\n\t\t\t\t\tname:this.treeData[0] + 'vs' + d.name,\n\t\t\t\t\tvalue:d.rate,\n\t\t\t\t\tdesc:'the ' + this.comparisonMode + ' rate of ' + this.treeData[0] + ' and ' +  d.name + ' is ' + d.rate,\n          data:{\n            industry:'',\n            company:this.treeTypeFlag == 'company'?[this.treeData[0],d.name]:[],\n            province:this.treeTypeFlag == 'province'?[this.treeData[0],d.name]:[],\n            attribute:'comparison'\n          }\n\t\t\t\t})\n\t\t\t})\n\t\t\t\n\t\t\t\n\t\t\tbar.selectAll(\"rect\")\n\t\t\t.data(this.bar_data)\n\t\t\t.attr(\"rx\",5)\n\t\t\t.style(\"fill\",(d,i)=>bar_color(i))\n\t\t\t.attr(\"x\",this.widthF/2)\n\t\t\t.attr(\"y\",(d,i)=> 60 + i * (pd+wd) -10)\n\t\t\t.transition()\n\t\t\t.delay((d,i)=> i * 200)\n\t\t\t\n\t\t\t.attr(\"width\",d=>bar_scale(d.rate));\n\t\t\t\n\t\t\tbar.selectAll(\"rect\")\n\t\t\t.data(this.bar_data)\n\t\t\t.exit()\n\t\t\t.remove()\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tbar.selectAll(\".text1\")\n\t\t\t.data(this.bar_data)\n\t\t\t.enter()\n\t\t\t.append(\"text\")\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t.attr(\"class\",\"text1\")\n\t\t\t.attr(\"font-size\", 0)\n\t\t\t\n\t\t\tbar.selectAll(\".text1\")\n\t\t\t.data(this.bar_data)\n\t\t\t.attr(\"dx\",this.widthF/2 - 10)\n\t\t\t.attr(\"dy\",(d,i)=> 60 + i * (pd+wd) )\n\t\t\t.attr(\"text-anchor\",\"end\")\n\t\t\t.attr(\"fill\",\"black\")\n\t\t\t.transition()\n\t\t\t.delay((d,i)=> i * 200)\n\t\t\t.attr(\"font-size\", 10)\n\t\t\t.text(d=>d.name);\n\t\t\t\n\t\t\tbar.selectAll(\".text1\")\n\t\t\t.data(this.bar_data)\n\t\t\t.exit()\n\t\t\t.remove();\n\t\t\t\n\t\t\tbar.selectAll(\".text2\")\n\t\t\t.data(this.bar_data)\n\t\t\t.enter()\n\t\t\t.append(\"text\")\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t.style(\"fill\",'black')\n\t\t\t.attr(\"class\",\"text2\")\n\t\t\t.attr(\"font-size\", 0)\n\t\t\t\n\t\t\tbar.selectAll(\".text2\")\n\t\t\t.data(this.bar_data)\n\t\t\t.transition()\n\t\t\t.delay((d,i)=> i * 200)\n\t\t\t.attr(\"font-size\", 12)\n\t\t\t.attr(\"dx\",d=>bar_scale(d.rate) + this.widthF/2 +5)\n\t\t\t.attr(\"dy\",(d,i)=> 60 + i * (pd+wd) )\n\t\t\t.text(d=>d.rate.toFixed(3))\n\t\t\t\n\t\t\t\n\t\t\tbar.selectAll(\".text2\")\n\t\t\t.data(this.bar_data)\n\t\t\t.exit()\n\t\t\t.remove();\n\t\t},\n\t\tsim(x,y,dataset){\n\t\t\tif(x==y){\n\t\t\t\treturn 1\n\t\t\t}\n\t\t\telse if(x.substring(0,2) == \"台湾\" || x.substring(0,2) == \"香港\"||x.substring(0,2) == \"澳门\"\n\t\t\t||y.substring(0,2) == \"台湾\" ||y.substring(0,2) == \"香港\" ||y.substring(0,2) == \"澳门\"){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\telse{\n\t\t\t\tlet sumXY = 0;\n\t\t\t\tfor(let i = 0;i<this.F_indData.length;i++){\n\t\t\t\t\tif(dataset.data[x][this.F_indData[i]] && dataset.data[y][this.F_indData[i]]){\n\t\t\t\t\t\tsumXY += dataset.data[x][this.F_indData[i]] * dataset.data[y][this.F_indData[i]]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet sumXS = 0;\n\t\t\t\tfor(let i = 0;i<this.F_indData.length;i++){\n\t\t\t\t\tif(dataset.data[x][this.F_indData[i]]){\n\t\t\t\t\t\tsumXS += dataset.data[x][this.F_indData[i]] * dataset.data[x][this.F_indData[i]] \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet sumYS = 0;\n\t\t\t\tfor(let i = 0;i<this.F_indData.length;i++){\n\t\t\t\t\tif(dataset.data[y][this.F_indData[i]]){\n\t\t\t\t\t\tsumYS += dataset.data[y][this.F_indData[i]] * dataset.data[y][this.F_indData[i]] \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet simRate = sumXY/Math.sqrt(sumXS * sumYS)\n\t\t\t\t\t\n\t\t\t\treturn simRate;\n\t\t\t}\n\t\t\t\n\t\t},\n\t\tcomplement(x,y,dataset){\n\t\t\tif(x == y){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse if(x.substring(0,2) == \"台湾\" || x.substring(0,2) == \"香港\"||x.substring(0,2) == \"澳门\"\n\t\t\t||y.substring(0,2) == \"台湾\" ||y.substring(0,2) == \"香港\" ||y.substring(0,2) == \"澳门\"){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlet keys = [];\n\t\t\t\tfor( let key in dataset.data[x]){\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tif(dataset.data[x].hasOwnProperty(key)){\n\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor( let key in dataset.data[y]){\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tif(dataset.data[y].hasOwnProperty(key) && keys.indexOf(key) == -1){\n\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet sumXY = 0;\n\t\t\t\tfor(let i = 0;i<keys.length;i++){\n\t\t\t\t\tif(dataset.data[x][keys[i]] && dataset.data[y][keys[i]]){\n\t\t\t\t\t\tsumXY += dataset.data[x][keys[i]] * dataset.data[y][keys[i]]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet sumXS = 0;\n\t\t\t\tfor(let i = 0;i<keys.length;i++){\n\t\t\t\t\tif(dataset.data[x][keys[i]]){\n\t\t\t\t\t\tsumXS += dataset.data[x][keys[i]] * dataset.data[x][keys[i]] \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet sumYS = 0;\n\t\t\t\tfor(let i = 0;i<keys.length;i++){\n\t\t\t\t\tif(dataset.data[y][keys[i]]){\n\t\t\t\t\t\tsumYS += dataset.data[y][keys[i]] * dataset.data[y][keys[i]] \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet simRate = sumXY/Math.sqrt(sumXS * sumYS)\n\t\t\t\t\n\t\t\t\treturn 1 - simRate;\n\t\t\t}\n\t\t\t\n\t\t},\n\t\tmatrixUpdate(){\n\t\t\tlet pd = 2,wd = this.matrixData.length == 0? 0:(this.widthF/2 - (this.matrixData.length-1) *pd)/this.matrixData.length;\n\t\t\tlet matrix_color = d3.scale.linear().domain([0,1]).range([\"#c1e8ca\",\"#48784f\"]);\n\t\t\td3.select(\"#Fmatrix\").selectAll(\"rect\")\n\t\t\t.data(this.matrixData2)\n\t\t\t.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.attr(\"fill\",'white')\n\t\t\t.attr(\"height\",0)\n\t\t\t.attr(\"width\",0)\n\t\t\t\n\t\t\td3.select(\"#Fmatrix\").selectAll(\"rect\")\n\t\t\t.data(this.matrixData2)\n\t\t\t\n\t\t\t.on(\"mouseover\",(d)=>{\n\t\t\t\td3.select(\"#Fmatrix\").selectAll(\"text\")\n\t\t\t\t.data(this.matrixData)\n\t\t\t\t.filter(data=>data == this.matrixData[d.y] )\n\t\t\t\t.style(\"fill\",\"#e34b00\");\n\t\t\t\t\n\t\t\t\td3.select(\"#Fmatrix\").selectAll(\"text\")\n\t\t\t\t.data(this.matrixData)\n\t\t\t\t.filter(data=>data == this.matrixData[d.x] )\n\t\t\t\t.style(\"fill\",\"#9eea74\");\n\t\t\t\t\n\t\t\t\td3.select(\"#Fmatrix\").selectAll(\"rect\")\n\t\t\t\t.data(this.matrixData2)\n\t\t\t\t.filter(data=>data.x == d.x && data.y == d.y || data.x == d.y && data.y == d.x)\n\t\t\t\t.style(\"fill\",\"red\");\n\t\t\t\t//this.F_TipRemove()\n\t\t\t\tthis.F_createTip(d)\n\t\t\t\tif(d.x!=d.y){\n\t\t\t\t\tthis.$store.commit({\n\t\t\t\t\ttype:'userMouseover'\n\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t\t.on(\"mousemove\",(d)=>{\n\t\t\t\t\n\t\t\t\tthis.F_TipRemove();\n\t\t\t\tthis.F_createTip(d)\n\t\t\t})\n\t\t\t.on(\"mouseout\",(d)=>{\n\t\t\t\tsetTimeout(\n\t\t\t\t\t()=>{\n\t\t\t\t\t\tthis.F_TipRemove();\n\t\t\t\t\t},1500\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\td3.select(\"#Fmatrix\").selectAll(\"text\")\n\t\t\t\t.data(this.matrixData)\n\t\t\t\t.filter(data=>data == this.matrixData[d.x] || data == this.matrixData[d.y])\n\t\t\t\t.style(\"fill\",\"black\");\n\t\t\t\t\n\t\t\t\td3.select(\"#Fmatrix\").selectAll(\"rect\")\n\t\t\t\t.data(this.matrixData2)\n\t\t\t\t.filter(data=>data.x == d.x && data.y == d.y || data.x == d.y && data.y == d.x)\n\t\t\t\t.style(\"fill\",data=>matrix_color(data.rate))\n\t\t\t\tlet type = this.comparisonMode == 'sim'?'similarity':'complement'\n\t\t\t\tif(d.x != d.y){\n\t\t\t\t\tthis.$store.commit({\n\t\t\t\t\ttype:'userMouseout',\n\t\t\t\t\tdif:'fast',\n\t\t\t\t\tview:'viewF',\n\t\t\t\t\twidth:this.widthF,\n\t\t\t\t\theight:this.heightF,\n\t\t\t\t\tobj:'tips(matrix)',\n\t\t\t\t\tname:this.matrixData[d.x] +' vs '+this.matrixData[d.y],\n\t\t\t\t\tvalue:d.rate,\n\t\t\t\t\tdesc:'the ' + type + ' rate of ' + this.matrixData[d.x] + ' and ' +  this.matrixData[d.y] + ' is ' + d.rate.toFixed(3),\n          data:{\n            industry:'',\n            company:this.treeTypeFlag == 'company'?[this.matrixData[d.x],this.matrixData[d.y]]:[],\n            province:this.treeTypeFlag == 'province'?[this.matrixData[d.x],this.matrixData[d.y]]:[],\n            attribute:this.comparisonMode == 'sim'?'similarity':'complement'\n          }\n\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t\t.transition()\n\t\t\t.attr(\"x\",d=>(this.widthF - this.matrixData.length * wd - pd *(this.matrixData.length-1))/2 + d.x * (wd + pd) + this.widthF/6)\n\t\t\t.attr(\"y\",d=>(this.heightF - this.matrixData.length * wd - pd *(this.matrixData.length-1))/2 + d.y * (wd + pd) +this.heightF/5)\n\t\t\t.attr(\"height\",wd)\n\t\t\t.attr(\"width\",wd)\n\t\t\t.attr(\"rx\",wd/5)\n\t\t\t.style(\"fill\",d=>matrix_color(d.rate))\n\t\t\t\n\t\t\t\n\t\t\td3.select(\"#Fmatrix\").selectAll(\"rect\")\n\t\t\t.data(this.matrixData2)\n\t\t\t.exit()\n\t\t\t.remove()\n\t\t\t\n\t\t\td3.select(\"#Fmatrix\").selectAll(\"text\")\n\t\t\t.data(this.matrixData)\n\t\t\t.enter()\n\t\t\t.append(\"text\")\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.style(\"font-size\", 10)\n\t\t\t.attr(\"text-anchor\",\"end\")\n\t\t\t\n\t\t\td3.select(\"#Fmatrix\").selectAll(\"text\")\n\t\t\t.data(this.matrixData)\n\t\t\t.transition()\n\t\t\t.attr(\"dx\",(this.widthF - this.matrixData.length * wd - pd *(this.matrixData.length-1))/2+ this.widthF/6-5)\n\t\t\t.attr(\"dy\",(d,i)=>(this.heightF - this.matrixData.length * wd - pd *(this.matrixData.length-1))/2 +i* (wd + pd)+this.heightF/5 + wd /2 +3)\n\t\t\t.text(d=>d)\n\t\t\t\n\t\t\td3.select(\"#Fmatrix\").selectAll(\"text\")\n\t\t\t.data(this.matrixData)\n\t\t\t.exit()\n\t\t\t.remove()\n\t\t}\n\t},\n\twatch:{\n\t\ttreeD(){\n\t\t\tif(this.treeData[0]){\n\t\t\t\td3.select(\"#FbarTitle\")\n\t\t\t\t.text(this.treeData[0]+'竞争排序')\n\t\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\td3.select(\"#FbarTitle\")\n\t\t\t\t.text('')\n\t\t\t\t\n\t\t\t\td3.select(\"#Fmatrix\").selectAll(\"rect\").remove()\n\t\t\t\td3.select(\"#Fmatrix\").selectAll(\"text\").remove()\n\t\t\t}\n\t\t},\n\t\tmatrixData3(){\n\t\t\tthis.matrixUpdate()\n\t\t},\n\t\tcomparisonMode(val){\n\t\t\tthis.matrixUpdate()\n\t\t\tif(val == 'sim'){\n\t\t\t\td3.select(\"#FbarTitle\")\n\t\t\t\t.text(this.treeData[0]+'竞争排序')\n\t\t\t}\n\t\t\telse if(val =='complement'){\n\t\t\t\td3.select(\"#FbarTitle\")\n\t\t\t\t.text(this.treeData[0]+'互补排序')\n\t\t\t}\n\t\t},\n\t\ttreeData1(){\n\t\t\tif(this.treeData1){\n\t\t\t\tthis.updateBar();\n\t\t\t\td3.select(\"#svgF\").selectAll(\".lgd1\")\n\t\t\t\t.style(\"display\",'inline')\n\t\t\t\td3.select(\"#Fbtn\").style(\"display\",'inline')\n\t\t\t\t\n\t\t\t\tif(this.treeTypeFlag=='company'){\n\t\t\t\t\tfor(let i = 0;i<this.bar_data.length;i++){\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.$store.commit({\n\t\t\t\t\t\t\ttype : 'changeMatrixElement',\n\t\t\t\t\t\t\telement : this.bar_data[i].name\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor(let i = 0;i<this.bar_data.length;i++){\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.$store.commit({\n\t\t\t\t\t\t\ttype : 'changeMatrixElement',\n\t\t\t\t\t\t\telement : this.bar_data[i].name\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\td3.select(\"#Fbar\").selectAll(\"rect\").remove();\n\t\t\t\td3.select(\"#Fbar\").selectAll(\"text\").remove();\n\t\t\t\td3.select(\"#svgF\").selectAll(\".lgd1\")\n\t\t\t\t.style(\"display\",'none')\n\t\t\t\td3.select(\"#Fbtn\").style(\"display\",'none')\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t},\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}