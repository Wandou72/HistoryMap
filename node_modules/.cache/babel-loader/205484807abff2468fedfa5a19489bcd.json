{"ast":null,"code":"import * as d3 from \"d3\";\nexport default {\n  name: 'graphNew',\n\n  data() {\n    return {\n      color: d3.scale.category10(),\n      svgConfig: {\n        height: this.$store.state.height * 0.95,\n        width: this.$store.state.width * 0.95,\n        backgroundColor: \"black\",\n        opacity: 0.8\n      },\n      innerLinkFlag: true,\n      outerLinkFlag: true,\n      hover: {\n        flag: false,\n        data: {},\n        type: 'inner'\n      },\n      // statesSelected:{\n      //   selected:'',\n      //   leaf:''\n      // },\n      XY: [],\n      storyBtn: false\n    };\n  },\n\n  mounted() {},\n\n  computed: {\n    nCluster() {\n      let sol = [];\n\n      for (let i = 0; i < this.cluster.length; i++) {\n        let t = this.cluster[i];\n        let tmp = {};\n        tmp['nodes'] = t.nodes;\n        tmp['count'] = t.count;\n        tmp['time'] = t.time;\n\n        if (this.diction[i] >= 0) {\n          tmp['desc'] = this.diction[i];\n        } else {\n          tmp['desc'] = null;\n        }\n\n        sol.push(tmp);\n      }\n\n      return sol;\n    },\n\n    diction() {\n      let sol = {};\n\n      for (let i = 0; i < this.cluster.length; i++) {\n        let t = this.cluster[i].nodes;\n\n        if (t.length < 5) {\n          let tmp = [];\n\n          for (let j of t) {\n            tmp.push(j.name);\n          } //console.log(tmp)\n\n\n          for (let j = 0; j < this.actToData.length; j++) {\n            let res = true; //console.log(tmp,this.actToData[j])\n\n            for (let k of this.actToData[j]) {\n              if (tmp.indexOf(k) === -1) {\n                res = false;\n              }\n            }\n\n            if (res == true) {\n              sol[i] = j;\n              break;\n            }\n          }\n        }\n      }\n\n      return sol;\n    },\n\n    actToData() {\n      let sol = []; //console.log(this.actionNodes)\n\n      for (let i = 0; i < this.actionNodes.length; i++) {\n        let t = this.actionNodes[i].data.data;\n        let tmp = [];\n\n        if (t.attribute) {\n          tmp.push(t.attribute);\n        }\n\n        if (t.industry) {\n          tmp.push(t.industry);\n        }\n\n        for (let j of t.company) {\n          tmp.push(j);\n        }\n\n        for (let j of t.province) {\n          tmp.push(j);\n        }\n\n        sol.push(tmp);\n      }\n\n      return sol;\n    },\n\n    imgStory() {\n      let sol = [];\n\n      for (let i = 0; i < this.actionNodes.length; i++) {\n        sol.push(this.actionNodes[i].data.desc);\n      }\n\n      return sol;\n    },\n\n    storyTest() {\n      let story = [];\n\n      for (let i = 0; i < this.newCluster.length; i++) {\n        if (i === 0) {\n          let tmp = {};\n          let a1 = this.getStory(this.newCluster[i].parent);\n          let first;\n\n          if (a1.length == 1) {\n            first = \"The user is most concerned about \" + a1[0] + '.';\n          } else if (a1.length == 2) {\n            first = \"The user is most concerned about \" + a1[0] + ' and ' + a1[1] + '.';\n          }\n\n          tmp['main'] = first;\n          tmp['sub'] = [];\n\n          for (let j = 0; j < this.newCluster[i].son.length; j++) {\n            let t = this.newCluster[i].son[j];\n\n            if (t.desc >= 0) {\n              tmp['sub'].push({\n                id: t.desc,\n                desc: this.imgStory[t.desc]\n              });\n            }\n          }\n\n          story.push(tmp);\n        } else if (i >= 1) {\n          let tmp = {};\n          let a1 = this.getStory(this.newCluster[i].parent);\n          let first;\n\n          if (a1.length == 1) {\n            first = \"The user is also concerned about \" + a1[0] + '.';\n          } else if (a1.length == 2) {\n            first = \"The user is also concerned about \" + a1[0] + ' and ' + a1[1] + '.';\n          }\n\n          tmp['main'] = first;\n          tmp['sub'] = [];\n\n          for (let j = 0; j < this.newCluster[i].son.length; j++) {\n            let t = this.newCluster[i].son[j];\n\n            if (t.desc >= 0) {\n              tmp['sub'].push({\n                id: t.desc,\n                desc: this.imgStory[t.desc]\n              });\n            }\n          }\n\n          story.push(tmp);\n        }\n      }\n\n      return story;\n    },\n\n    storyPieces() {\n      let sol = [];\n\n      for (let i = 0; i < this.cluster.length; i++) {\n        sol.push(this.getStory(this.cluster[i]));\n      }\n\n      return sol;\n    },\n\n    newCluster() {\n      let sol = [];\n      let tmp2 = [];\n\n      for (let i = 0; i < this.nCluster.length - 1; i++) {\n        let tmp = [];\n\n        for (let j = i + 1; j < this.nCluster.length; j++) {\n          if (this.judgeSub(this.nCluster[i], this.nCluster[j])) {\n            tmp.push(this.nCluster[j]);\n            tmp2.push(j);\n          }\n        }\n\n        if (tmp2.indexOf(i) == -1) {\n          sol.push({\n            parent: this.nCluster[i],\n            son: tmp\n          });\n        }\n      }\n\n      return sol;\n    },\n\n    lenScale() {\n      return d3.scale.linear().domain([0, this.maxWeight]).range([5, 75]);\n    },\n\n    maxWeight() {\n      let maxi = 0;\n\n      for (let i = 0; i < this.cluster.length; i++) {\n        let weight = this.getWeight(this.cluster[i]);\n\n        if (weight > maxi) {\n          maxi = weight;\n        }\n      }\n\n      return maxi;\n    },\n\n    linkDistance() {\n      if (this.dataNodes.length < 10) {\n        return 200;\n      } else if (this.dataNodes.length < 20) {\n        return 150;\n      } else if (this.dataNodes.length < 30) {\n        return 100;\n      } else {\n        return 50;\n      }\n    },\n\n    community() {\n      let sol = [];\n\n      for (let i = 0; i < this.dataNodes.length; i++) {\n        let tmp = [];\n\n        for (let j = 0; j < this.cluster.length; j++) {\n          tmp.push(0);\n        }\n\n        sol.push(tmp);\n      }\n\n      for (let i = 0; i < this.cluster.length; i++) {\n        for (let j = 0; j < this.cluster[i].nodes.length; j++) {\n          let row = this.cluster[i].nodes[j].index;\n          let col = i;\n          sol[row][col] = 1;\n        }\n      }\n\n      return sol;\n    },\n\n    cluster() {\n      let sol = [];\n      let ref = [];\n\n      for (let i = 0; i < this.dataNodes.length; i++) {\n        let provFlag = false;\n        let compFlag = false;\n\n        if (this.dataNodes[i].type != 'attribute') {\n          //if(this.dataNodes[i].name != 'patent_num' && this.dataNodes[i].name != 'proportion' && this.dataNodes[i].name != 'comparison'){\n          let tmp = [this.dataNodes[i]];\n          let sumTime = this.dataNodes[i].dura;\n          let sumCount = this.dataNodes[i].count;\n          let tmp2 = [i];\n\n          for (let j = 0; j < this.dataLinks.length; j++) {\n            if (this.dataLinks[j].i == i) {\n              if (this.dataNodes[this.dataLinks[j].j].type == 'company') {\n                compFlag = true;\n              }\n\n              if (this.dataNodes[this.dataLinks[j].j].type == 'province') {\n                provFlag = true;\n              }\n\n              tmp.push(this.dataNodes[this.dataLinks[j].j]);\n              tmp2.push(this.dataLinks[j].j);\n              sumTime += this.dataNodes[this.dataLinks[j].j].dura;\n              sumCount += this.dataNodes[this.dataLinks[j].j].count;\n            }\n\n            if (this.dataLinks[j].j == i) {\n              if (this.dataNodes[this.dataLinks[j].i].type == 'company') {\n                compFlag = true;\n              }\n\n              if (this.dataNodes[this.dataLinks[j].i].type == 'province') {\n                provFlag = true;\n              }\n\n              tmp.push(this.dataNodes[this.dataLinks[j].i]);\n              tmp2.push(this.dataLinks[j].i);\n              sumTime += this.dataNodes[this.dataLinks[j].i].dura;\n              sumCount += this.dataNodes[this.dataLinks[j].j].count;\n            }\n          }\n\n          tmp2.sort();\n          let st = tmp2.join('+');\n\n          if (ref.indexOf(st) == -1 && !(compFlag && provFlag)) {\n            ref.push(st);\n            sol.push({\n              nodes: tmp,\n              count: sumCount,\n              time: sumTime\n            });\n          }\n        }\n      }\n\n      sol.sort((a, b) => {\n        return this.getWeight(b) - this.getWeight(a);\n      });\n      return sol;\n    },\n\n    adjMatrix() {\n      let sol = [];\n      let n = this.dataNodes.length;\n\n      var getWeight = (i, j, links) => {\n        if (i == j) {\n          return 0;\n        }\n\n        for (let k = 0; k < links.length; k++) {\n          if (links[k].i == i && links[k].j == j || links[k].i == j && links[k].j == i) {\n            return links[k].weight;\n          }\n        }\n\n        return 0;\n      };\n\n      for (let i = 0; i < n; i++) {\n        let vector = [];\n\n        for (let j = 0; j < n; j++) {\n          vector.push(getWeight(i, j, this.dataLinks));\n        }\n\n        sol.push(vector);\n      }\n\n      return sol;\n    },\n\n    arc() {\n      return d3.svg.arc().outerRadius(this.svgConfig.height / 2 - 18).innerRadius(this.svgConfig.height / 2 - 22);\n    },\n\n    // 外圈弧长的数据\n    arcData() {\n      let endR = Math.PI * 2 * 350 / 360;\n      let endT = this.actionList[this.actionList.length - 1].timeStamp;\n      let sol = [];\n\n      for (let i = 0; i < this.actionList.length - 1; i++) {\n        sol.push({\n          startAngle: this.actionList[i].timeStamp / endT * endR,\n          endAngle: this.actionList[i + 1].timeStamp / endT * endR,\n          color: this.color(this.actionList[i].view)\n        });\n      }\n\n      return sol;\n      /* var data = [ \n          {startAngle: 0, endAngle: 0.1 * endAngle},\n          {startAngle: 0.1 * endAngle, endAngle: 0.2 * endAngle},\n          {startAngle: 0.2 * endAngle, endAngle: 0.4 * endAngle},\n          {startAngle: 0.4 * endAngle, endAngle: 0.6 * endAngle},        \n          {startAngle: 0.6 * endAngle, endAngle: 0.7 * endAngle},        \n          {startAngle: 0.7 * endAngle, endAngle: 0.9 * endAngle},        \n          {startAngle: 0.9 * endAngle, endAngle: endAngle}\n      ]; */\n    },\n\n    force() {\n      return d3.layout.force().size([this.svgConfig.width, this.svgConfig.height]).on(\"tick\", this.tick).gravity(0.1).charge(-1000).friction(0.85);\n    },\n\n    actionList() {\n      return this.$store.state.user.actionList;\n    },\n\n    visualStates() {\n      return this.$store.state.visualStates;\n    },\n\n    visualList() {\n      return this.$store.state.visualList;\n    },\n\n    screenShot() {\n      return this.$store.state.screenShot;\n    },\n\n    selected() {\n      return this.$store.state.selected;\n    },\n\n    // 外圈的动作节点\n    actionNodes() {\n      if (this.actionList.length < 2) {\n        return [];\n      } else {\n        let center = [this.svgConfig.width / 2, this.svgConfig.height / 2];\n        let endT = this.actionList[this.actionList.length - 1].timeStamp;\n        let endR = Math.PI * 2 * 350 / 360;\n        let R = this.svgConfig.height / 2 - 20;\n\n        var getPos = (data, outerRadius, endTime, endRadius) => {\n          let alpha = data.timeStamp / endTime * endRadius;\n          return [center[0] + outerRadius * Math.sin(alpha), center[1] - outerRadius * Math.cos(alpha)];\n        };\n\n        let sol = [];\n\n        for (let i = 0; i < this.actionList.length; i++) {\n          sol.push({\n            xy: getPos(this.actionList[i], R, endT, endR),\n            data: this.actionList[i],\n            states: this.visualList[i + 1]\n          });\n        }\n\n        return sol;\n      }\n    },\n\n    dataNodes() {\n      let sol = [];\n\n      if (this.actionList.length < 2) {\n        return sol;\n      } else {\n        let lst = [];\n\n        for (let i = 0; i < this.actionList.length; i++) {\n          if (this.actionList[i].data.industry != '') {\n            lst.push({\n              name: this.actionList[i].data.industry,\n              type: 'industry',\n              time: i < this.actionList.length - 1 ? this.actionList[i + 1].timeStamp - this.actionList[i].timeStamp : 10\n            });\n          }\n\n          if (this.actionList[i].data.company.length > 0) {\n            for (let j = 0; j < this.actionList[i].data.company.length; j++) {\n              lst.push({\n                name: this.actionList[i].data.company[j],\n                type: 'company',\n                time: i < this.actionList.length - 1 ? this.actionList[i + 1].timeStamp - this.actionList[i].timeStamp : 10\n              });\n            }\n          }\n\n          if (this.actionList[i].data.province.length > 0) {\n            for (let j = 0; j < this.actionList[i].data.province.length; j++) {\n              lst.push({\n                name: this.actionList[i].data.province[j],\n                type: 'province',\n                time: i < this.actionList.length - 1 ? this.actionList[i + 1].timeStamp - this.actionList[i].timeStamp : 10\n              });\n            }\n          }\n\n          if (this.actionList[i].data.attribute != '') {\n            lst.push({\n              name: this.actionList[i].data.attribute,\n              type: 'attribute',\n              time: i < this.actionList.length - 1 ? this.actionList[i + 1].timeStamp - this.actionList[i].timeStamp : 10\n            });\n          }\n        } // console.log(lst)\n\n\n        let tmp = [];\n\n        var count = (str, arr) => {\n          let c = 0;\n\n          for (let i = 0; i < arr.length; i++) {\n            if (arr[i].name == str) {\n              c++;\n            }\n          }\n\n          return c;\n        };\n\n        var dura = (str, arr) => {\n          let c = 0;\n\n          for (let i = 0; i < arr.length; i++) {\n            if (arr[i].name == str) {\n              c += arr[i].time;\n            }\n          }\n\n          return parseFloat(c.toFixed(2));\n        };\n\n        let ind = 0;\n\n        for (let i = 0; i < lst.length; i++) {\n          if (tmp.indexOf(lst[i].name) == -1) {\n            tmp.push(lst[i].name);\n            sol.push({\n              index: ind,\n              name: lst[i].name,\n              type: lst[i].type,\n              count: count(lst[i].name, lst),\n              dura: dura(lst[i].name, lst)\n            });\n            ind++;\n          }\n        }\n\n        return sol;\n      }\n    },\n\n    dataNodes2() {\n      return this.dataNodes.length;\n    },\n\n    dataLinks() {\n      let sol = [];\n\n      if (this.actionList.length < 2) {\n        return [];\n      } else {\n        var judgeIn = (key1, key2, lst) => {\n          for (let i = 0; i < lst.length; i++) {\n            if (lst[i].source.name == key1 && lst[i].target.name == key2 || lst[i].source.name == key2 && lst[i].target.name == key1) {\n              return i;\n            }\n          }\n\n          return 'notIn';\n        };\n\n        var getIndex = (key, lst) => {\n          for (let i = 0; i < lst.length; i++) {\n            if (lst[i].name == key) {\n              return i;\n            }\n          }\n        };\n\n        for (let i = 0; i < this.actionNodes.length; i++) {\n          let tmp = [];\n\n          if (this.actionList[i].data.industry != '') {\n            tmp.push(this.actionList[i].data.industry);\n          }\n\n          if (this.actionList[i].data.company.length > 0) {\n            for (let j = 0; j < this.actionList[i].data.company.length; j++) {\n              tmp.push(this.actionList[i].data.company[j]);\n            }\n          }\n\n          if (this.actionList[i].data.province.length > 0) {\n            for (let j = 0; j < this.actionList[i].data.province.length; j++) {\n              tmp.push(this.actionList[i].data.province[j]);\n            }\n          }\n\n          if (this.actionList[i].data.attribute != '') {\n            tmp.push(this.actionList[i].data.attribute);\n          }\n\n          for (let j = 0; j < tmp.length - 1; j++) {\n            for (let k = j + 1; k < tmp.length; k++) {\n              if (judgeIn(tmp[j], tmp[k], sol) == 'notIn' && tmp[j] != tmp[k]) {\n                sol.push({\n                  source: this.dataNodes[getIndex(tmp[j], this.dataNodes)],\n                  target: this.dataNodes[getIndex(tmp[k], this.dataNodes)],\n                  weight: 1,\n                  i: getIndex(tmp[j], this.dataNodes),\n                  j: getIndex(tmp[k], this.dataNodes)\n                });\n              } else {\n                sol[judgeIn(tmp[j], tmp[k], sol)].weight++;\n              }\n            }\n          }\n        }\n      }\n\n      return sol;\n    },\n\n    interactionLinks() {\n      let sol = [];\n\n      if (this.actionList.length < 2) {\n        return [];\n      } else {\n        var getIndex = (key, lst) => {\n          for (let i = 0; i < lst.length; i++) {\n            if (lst[i].name == key) {\n              return i;\n            }\n          }\n        };\n\n        for (let i = 0; i < this.actionNodes.length; i++) {\n          let tmp = [];\n\n          if (this.actionList[i].data.industry != '') {\n            tmp.push(this.actionList[i].data.industry);\n          }\n\n          if (this.actionList[i].data.company.length > 0) {\n            for (let j = 0; j < this.actionList[i].data.company.length; j++) {\n              tmp.push(this.actionList[i].data.company[j]);\n            }\n          }\n\n          if (this.actionList[i].data.province.length > 0) {\n            for (let j = 0; j < this.actionList[i].data.province.length; j++) {\n              tmp.push(this.actionList[i].data.province[j]);\n            }\n          }\n\n          if (this.actionList[i].data.attribute != '') {\n            tmp.push(this.actionList[i].data.attribute);\n          }\n\n          for (let j = 0; j < tmp.length; j++) {\n            sol.push({\n              source: this.actionNodes[i],\n              target: this.dataNodes[getIndex(tmp[j], this.dataNodes)]\n            });\n          }\n        }\n\n        return sol;\n      }\n    }\n\n  },\n  methods: {\n    rebuildState(node) {\n      this.$store.commit('showGraph'); // this.$store.commit()\n\n      this.$store.commit({\n        type: 'rebuildStates',\n        Aselected: node.Aselected,\n        Aleaf: node.Aleaf,\n        Bflare0: node.Bflare0,\n        Bflare1: node.Bflare1,\n        BflareSum: node.BflareSum,\n        BflareSum2: node.BflareSum2,\n        BflareSum3: node.BflareSum3,\n        BtreeTypeFlag: node.BtreeTypeFlag,\n        Bsplited: node.Bsplited,\n        Bdepth: node.Bdepth,\n        BrootName: node.BrootName,\n        BtreeData: node.BtreeData,\n        Dtitle: node.Dtitle\n      }); // this.\n    },\n\n    getStory(cluster) {\n      //let company = []\n      //let province = []\n      let entity = [];\n      let attribute = [];\n      let industry = [];\n      let comparison = [];\n\n      for (let i = 0; i < cluster.nodes.length; i++) {\n        if (cluster.nodes[i].type == 'company') {\n          entity.push(cluster.nodes[i].name);\n        } else if (cluster.nodes[i].type == 'province') {\n          entity.push(cluster.nodes[i].name);\n        } else if (cluster.nodes[i].type == 'attribute') {\n          if (cluster.nodes[i].name == 'proportion') {\n            attribute.push('patent proportion');\n          } else if (cluster.nodes[i].name == 'patent_num') {\n            attribute.push('patent number');\n          } else {\n            comparison.push(cluster.nodes[i].name);\n          }\n        } else if (cluster.nodes[i].type == 'industry') {\n          industry.push(cluster.nodes[i].name);\n        }\n      }\n\n      let wordEntity = '';\n      let wordIndustry = '';\n      let wordAttribute = '';\n      let wordComparison = '';\n\n      if (attribute.length > 0) {\n        if (attribute.length == 1) {\n          wordAttribute = attribute[0];\n        } else if (attribute.length == 2) {\n          wordAttribute = attribute[0] + ' and ' + attribute[1];\n        } else {\n          wordAttribute = attribute.join(', ');\n        }\n      }\n\n      if (comparison.length > 0) {\n        if (comparison.length == 1) {\n          wordComparison = comparison[0];\n        } else if (comparison.length == 2) {\n          wordComparison = comparison[0] + ' and ' + comparison[1];\n        } else {\n          wordComparison = comparison.join(', ');\n        }\n      }\n\n      if (entity.length > 0) {\n        if (entity.length == 1) {\n          wordEntity = entity[0];\n        } else if (entity.length == 2) {\n          wordEntity = entity[0] + ' and ' + entity[1];\n        } else {\n          wordEntity = entity.join(', ');\n        }\n      }\n\n      if (industry.length > 0) {\n        if (industry.length == 1) {\n          wordIndustry = industry[0];\n        } else if (industry.length == 2) {\n          wordIndustry = industry[0] + ' and ' + industry[1];\n        } else {\n          wordIndustry = industry.join(', ');\n        }\n      }\n\n      let piece = [];\n\n      if (wordComparison) {\n        let text = wordComparison === \"similarity\" || wordComparison === \"complement\" ? 'the ' + wordComparison + ' between ' + wordEntity : 'the ' + wordComparison + ' between ' + wordEntity + ' in ' + wordIndustry;\n        piece.push(text);\n      }\n\n      if (wordAttribute) {\n        let text = 'the ' + wordAttribute + ' of ' + wordEntity + ' in ' + wordIndustry;\n        piece.push(text);\n      }\n\n      return piece;\n    },\n\n    judgeSub(parent, son) {\n      //console.log('123123123',parent,son)\n      for (let i = 0; i < son.nodes.length; i++) {\n        //console.log('12312331',i)\n        if (parent.nodes.indexOf(son.nodes[i]) == -1) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    getColor(i, j) {\n      let maxi = this.getWeight(this.cluster[j]);\n      let maxi2 = 0;\n\n      for (let k = 0; k < this.cluster[j].nodes.length; k++) {\n        let tmp = this.cluster[j].nodes[k].count * 5 + this.cluster[j].nodes[k].dura;\n\n        if (tmp > maxi2) {\n          maxi2 = tmp;\n        }\n      }\n\n      let scale = d3.scale.linear().domain([0, maxi2 / maxi]).range(['#f8de85', \"#da0000\"]);\n      return scale((this.dataNodes[i].count * 5 + this.dataNodes[i].dura) / maxi);\n    },\n\n    getWeight(clu) {\n      return clu.count * 5 + clu.time;\n    },\n\n    clusterHighlight(ind) {\n      let indexList = [];\n\n      for (let i = 0; i < this.community.length; i++) {\n        if (this.community[i][ind] == 1) {\n          indexList.push(i);\n        }\n      }\n\n      d3.select(\"#innerGraph\").selectAll(\"circle\").filter(d => indexList.indexOf(d.index) == -1).style(\"fill-opacity\", 0.3).style(\"stroke-opacity\", 0.3);\n      d3.select(\"#innerGraph\").selectAll(\"circle\").filter(d => indexList.indexOf(d.index) != -1).style(\"fill-opacity\", 1).style(\"stroke-opacity\", 1);\n      d3.select(\"#innerLinks\").selectAll(\"line\").filter(k => indexList.indexOf(k.source.index) != -1 && indexList.indexOf(k.target.index) != -1).style(\"stroke-opacity\", 1);\n      d3.select(\"#innerLinks\").selectAll(\"line\").filter(k => indexList.indexOf(k.source.index) == -1 || indexList.indexOf(k.target.index) == -1).style(\"stroke-opacity\", 0);\n      d3.select(\"#outerLinks\").selectAll(\"line\").filter(k => indexList.indexOf(k.target.index) != -1).style(\"stroke-opacity\", 1).style(\"stroke-width\", 2);\n      d3.select(\"#outerLinks\").selectAll(\"line\").filter(k => indexList.indexOf(k.target.index) == -1).style(\"stroke-opacity\", 0);\n      d3.select(\"#outerLinks\").selectAll(\"polygon\").filter(k => indexList.indexOf(k.target.index) != -1).style(\"fill-opacity\", 1);\n      d3.select(\"#outerLinks\").selectAll(\"polygon\").filter(k => indexList.indexOf(k.target.index) == -1).style(\"fill-opacity\", 0);\n    },\n\n    outerTip(d) {\n      this.XY = [d.xy[0], d.xy[1] > this.svgConfig.height / 2 ? d.xy[1] - 30 : d.xy[1] + 30];\n      this.hover.flag = true;\n      this.hover.type = 'outer';\n      this.hover.data = d; // console.log(\"hover.data.data.pic\", this.hover.data.data.pic)\n    },\n\n    innerHighlight(d) {\n      let tmp = [d.name];\n\n      for (let i = 0; i < this.dataLinks.length; i++) {\n        if (d.name == this.dataLinks[i].target.name) {\n          tmp.push(this.dataLinks[i].source.name);\n        } else if (d.name == this.dataLinks[i].source.name) {\n          tmp.push(this.dataLinks[i].target.name);\n        }\n      }\n\n      d3.select(\"#innerGraph\").selectAll(\"circle\").filter(d => tmp.indexOf(d.name) == -1).style(\"fill-opacity\", 0.3).style(\"stroke-opacity\", 0.3);\n      d3.select(\"#innerGraph\").selectAll(\"circle\").filter(d => tmp.indexOf(d.name) != -1).style(\"fill-opacity\", 1).style(\"stroke-opacity\", 1);\n      d3.select(\"#innerLinks\").selectAll(\"line\").filter(k => tmp.indexOf(k.source.name) != -1 && tmp.indexOf(k.target.name) != -1).style(\"stroke-opacity\", 1);\n      d3.select(\"#innerLinks\").selectAll(\"line\").filter(k => tmp.indexOf(k.source.name) == -1 || tmp.indexOf(k.target.name) == -1).style(\"stroke-opacity\", 0);\n      d3.select(\"#outerLinks\").selectAll(\"line\").filter(k => k.target.name == d.name).style(\"stroke-opacity\", 1).style(\"stroke-width\", 2);\n      d3.select(\"#outerLinks\").selectAll(\"line\").filter(k => k.target.name != d.name).style(\"stroke-opacity\", 0);\n      d3.select(\"#outerLinks\").selectAll(\"polygon\").filter(k => k.target.name == d.name).style(\"fill-opacity\", 1);\n      d3.select(\"#outerLinks\").selectAll(\"polygon\").filter(k => k.target.name != d.name).style(\"fill-opacity\", 0);\n    },\n\n    outerHighlight(d) {\n      let tmp = [];\n\n      if (d.data.data.industry != '') {\n        tmp.push(d.data.data.industry);\n      }\n\n      if (d.data.data.company.length > 0) {\n        for (let j = 0; j < d.data.data.company.length; j++) {\n          tmp.push(d.data.data.company[j]);\n        }\n      }\n\n      if (d.data.data.province.length > 0) {\n        for (let j = 0; j < d.data.data.province.length; j++) {\n          tmp.push(d.data.data.province[j]);\n        }\n      }\n\n      if (d.data.data.attribute != '') {\n        tmp.push(d.data.data.attribute);\n      }\n\n      d3.select(\"#innerGraph\").selectAll(\"circle\").filter(d => tmp.indexOf(d.name) == -1).style(\"fill-opacity\", 0.3).style(\"stroke-opacity\", 0.3);\n      d3.select(\"#innerGraph\").selectAll(\"circle\").filter(d => tmp.indexOf(d.name) != -1).style(\"fill-opacity\", 1).style(\"stroke-opacity\", 1);\n      d3.select(\"#outerLinks\").selectAll(\"line\").filter(k => k.source.data.timeStamp == d.data.timeStamp).style(\"stroke-opacity\", 1).style(\"stroke-width\", 2);\n      d3.select(\"#outerLinks\").selectAll(\"line\").filter(k => k.source.data.timeStamp != d.data.timeStamp).style(\"stroke-opacity\", 0);\n      d3.select(\"#outerLinks\").selectAll(\"polygon\").filter(k => k.source.data.timeStamp == d.data.timeStamp).style(\"fill-opacity\", 1);\n      d3.select(\"#outerLinks\").selectAll(\"polygon\").filter(k => k.source.data.timeStamp != d.data.timeStamp).style(\"fill-opacity\", 0);\n      d3.select(\"#innerLinks\").selectAll(\"line\").filter(k => tmp.indexOf(k.source.name) != -1 && tmp.indexOf(k.target.name) != -1).style(\"stroke-opacity\", 1);\n      d3.select(\"#innerLinks\").selectAll(\"line\").filter(k => tmp.indexOf(k.source.name) == -1 || tmp.indexOf(k.target.name) == -1).style(\"stroke-opacity\", 0);\n    },\n\n    outerOut() {\n      d3.select(\"#innerGraph\").selectAll(\"circle\").style(\"fill-opacity\", 1).style(\"stroke-opacity\", 1);\n      d3.select(\"#innerLinks\").selectAll(\"line\").style(\"stroke-opacity\", 1).style(\"stroke-width\", 2);\n      d3.select(\"#outerLinks\").selectAll(\"line\").style(\"stroke-opacity\", 1).style(\"stroke-width\", 0.5);\n      d3.select(\"#outerLinks\").selectAll(\"polygon\") //.filter(k=>k.source.data.timeStamp == d.data.timeStamp)\n      .style(\"fill-opacity\", 1);\n    },\n\n    getAngle(point1, point2) {\n      let sin = this.tri(point1, point2, \"sin\");\n      return Math.asin(sin);\n    },\n\n    getPoint(point1, point2) {\n      let r = 15,\n          angle = Math.PI / 9;\n      let theta = this.getAngle(point1, point2);\n\n      if (point1.xy[0] < point2.x) {\n        theta = Math.PI - theta;\n      }\n\n      let theta1 = theta - angle,\n          theta2 = theta + angle,\n          sin1 = Math.sin(theta1),\n          sin2 = Math.sin(theta2),\n          cos1 = Math.cos(theta1),\n          cos2 = Math.cos(theta2);\n      let x = this.getNewPos(point2, point1, -(10 + point2.count * 3) - 10)[0],\n          y = this.getNewPos(point2, point1, -(10 + point2.count * 3) - 10)[1];\n      let p1 = [x + r * cos1, y + r * sin1],\n          p2 = [x + r * cos2, y + r * sin2],\n          p3 = [x, y];\n      return [p1, p2, p3];\n    },\n\n    log() {\n      // console.log('actNode',this.actionNodes)\n      // console.log('dataNode',this.dataNodes)\n      // console.log('dataLink',this.dataLinks)\n      // console.log('interLink',this.interactionLinks)\n      // console.log('arc',this.arcData)\n      // console.log('adjcent',this.adjMatrix)\n      // console.log('cluster',this.cluster)\n      // console.log('matrix',this.community)\n      // console.log('maxWeight',this.maxWeight)\n      // console.log('newCluster',this.newCluster)\n      // console.log('storyPieces',this.storyPieces)\n      // console.log('storyTest',this.storyTest)\n      // console.log('imgStory',this.imgStory)\n      // console.log('act2Data',this.actToData)\n      // console.log('dictionary',this.diction)\n      console.log('selected', this.selected);\n      console.log('actionList', this.actionList);\n      console.log('visualStates', this.visualStates);\n      console.log('visualList', this.visualList); // console.log('screenShot',this.screenShot)\n      //this.createNodes()\n    },\n\n    tick() {\n      d3.select(\"#innerGraph\").selectAll('circle').attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n      d3.select(\"#innerLinks\").selectAll(\"line\").attr(\"x1\", d => d.source.x).attr(\"x2\", d => d.target.x).attr(\"y1\", d => d.source.y).attr(\"y2\", d => d.target.y);\n      d3.select(\"#outerLinks\").selectAll(\"line\").attr(\"x1\", d => d.source.xy[0]).attr(\"x2\", d => this.getNewPos(d.target, d.source, -(10 + d.target.count * 3) - 10)[0]).attr(\"y1\", d => d.source.xy[1]).attr(\"y2\", d => this.getNewPos(d.target, d.source, -(10 + d.target.count * 3) - 10)[1]);\n      d3.select(\"#outerLinks\").selectAll(\"polygon\").attr(\"points\", d => this.getPoint(d.source, d.target));\n    },\n\n    tri(point1, point2, type) {\n      let x1 = point1.xy[0],\n          x2 = point2.x,\n          y1 = point1.xy[1],\n          y2 = point2.y,\n          a = y1 - y2,\n          b = x1 - x2,\n          c = Math.sqrt(a * a + b * b);\n\n      if (type == 'sin') {\n        return a / c;\n      } else if (type == 'cos') {\n        return b / c;\n      } else if (type == 'tan') {\n        return b == 0 ? 0 : a / b;\n      }\n    },\n\n    getNewPos(point1, point2, r) {\n      return [point1.x - r * this.tri(point2, point1, \"cos\"), point1.y - r * this.tri(point2, point1, \"sin\")];\n    },\n\n    createNodes() {\n      this.force.linkStrength(0.8).linkDistance(100).nodes(this.dataNodes).links(this.dataLinks).start();\n      d3.select(\"#innerGraph\").selectAll(\"circle\").data(this.dataNodes).enter().append(\"circle\").call(this.force.drag);\n      d3.select(\"#innerGraph\").selectAll(\"circle\").data(this.dataNodes).attr(\"class\", \"dots\").attr(\"r\", 20).style(\"fill\", d => this.color(d.type)).style(\"stroke\", 'white');\n      d3.select(\"#innerLinks\").selectAll(\"line\").data(this.dataLinks).enter().append(\"line\");\n      d3.select(\"#innerLinks\").selectAll(\"line\").data(this.dataLinks).attr(\"stroke\", 'red').attr('stroke-width', 2);\n    }\n\n  },\n  watch: {\n    dataNodes() {\n      this.force.linkStrength(0.8).linkDistance(this.linkDistance).nodes(this.dataNodes).links(this.dataLinks).start();\n      d3.select(\"#innerGraph\").selectAll(\"circle\").data(this.dataNodes).enter().append(\"circle\").call(this.force.drag);\n      d3.select(\"#innerGraph\").selectAll(\"circle\").data(this.dataNodes).attr(\"r\", d => 10 + d.count * 3).style(\"fill\", d => this.color(d.type)).style(\"stroke\", 'white').on(\"mouseover\", d => {\n        this.hover.type = 'inner';\n        this.hover.flag = true;\n        this.hover.data = d; //console.log(d)\n\n        this.innerHighlight(d);\n      }).on(\"mousemove\", () => {\n        let wid = this.hover.data.name.length > 10 ? (this.hover.data.name.length + 5) * 10 + 10 : 230;\n        this.XY = [event.offsetX > this.svgConfig.width - wid - 20 ? event.offsetX - wid - 20 : event.offsetX, event.offsetY];\n      }).on(\"mouseout\", () => {\n        this.hover.flag = false;\n        this.hover.data = {};\n        this.outerOut();\n      });\n      d3.select(\"#innerGraph\").selectAll(\"circle\").data(this.dataNodes).exit().remove();\n      d3.select(\"#innerLinks\").selectAll(\"line\").data(this.dataLinks).enter().append(\"line\");\n      d3.select(\"#innerLinks\").selectAll(\"line\").data(this.dataLinks).attr(\"stroke\", 'red').attr('stroke-width', 2);\n      d3.select(\"#innerLinks\").selectAll(\"line\").data(this.dataLinks).exit().remove();\n      d3.select(\"#outerLinks\").selectAll(\"line\").data(this.interactionLinks).enter().append(\"line\");\n      d3.select(\"#outerLinks\").selectAll(\"line\").data(this.interactionLinks).attr(\"stroke\", 'grey').attr('stroke-width', 0.5);\n      d3.select(\"#outerLinks\").selectAll(\"line\").data(this.interactionLinks).exit().remove();\n      d3.select(\"#outerLinks\").selectAll(\"polygon\").data(this.interactionLinks).enter().append(\"polygon\");\n      d3.select(\"#outerLinks\").selectAll(\"polygon\").data(this.interactionLinks).attr('fill', 'grey');\n      d3.select(\"#outerLinks\").selectAll(\"polygon\").data(this.interactionLinks).exit().remove();\n      /* <polygon v-if = 'getNewPos(d.source,d.target,15)[0]'\n      :points = 'getPoint(d.source,d.target)'\n      :fill = 'linksColor(d)'\n      :fill-opacity = 'linksOpacity(d)'>\n      </polygon> */\n    }\n\n  }\n};","map":{"version":3,"sources":["C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\src\\components\\graphNew.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t\n\t<svg id = 'graphSvg' \n\t:height = 'svgConfig.height' :width = 'svgConfig.width'\n\t@click = 'log()'>\n      <!-- <g id = 'matrix'\n      transform = 'translate(0,-20)'>\n        <g class = 'weight' v-for = '(d,i) in cluster'\n        :key = 'i'>\n          <rect\n          :x = 'i * (500/cluster.length) + 5+20 + svgConfig.width - 600'\n          y = 725\n          :height = 'lenScale(getWeight(d))'\n          :width = '500/cluster.length-15'\n          fill = '#54f2f3'\n          rx = 5\n          \n          >\n          </rect>\n          <text\n          :dx = 'i * (500/cluster.length) + 5 +(500/cluster.length-15)/2 +20 + svgConfig.width - 600'\n          :dy = '740 + lenScale(getWeight(d))'\n          fill = 'black'\n          text-anchor = 'middle'\n          font-weight = 'bold'\n          font-size = 12\n          \n          >\n            {{(getWeight(d)/maxWeight).toFixed(2)}}\n          </text>\n        </g>\n        <g class = 'row' v-for = '(d,i) in community'\n        :key = 'i'>\n          <rect v-for = '(k,j) in d'\n          :key = 'j'\n          :x = 'j * (500/d.length) + 20 + svgConfig.width - 600'\n          :y = 'i * (550/community.length) + 20 + 150'\n          :height = '550/community.length - 5'\n          :width = '500/d.length-5'\n          :fill = 'k == 1?getColor(i,j):\"lightgrey\"'\n          stroke = 'white'\n          :stroke-width = 'cluster[j].nodes[0].index == i? 10:0'\n          stroke-dasharray = '4'\n          \n          >\n          </rect>\n          <text\n          :dx = 'svgConfig.width - 600 + 10'\n          :dy = '(i+0.5) * (550/community.length) + 25 + 150 '\n          text-anchor = 'end'\n          fill = 'black'\n          >\n            {{dataNodes[i].type == 'attribute'?dataNodes[i].name:dataNodes[i].name.length>=8? dataNodes[i].name.substring(0,8) + '..':dataNodes[i].name}}\n          </text>\n        </g>\n        <text v-for = '(d,i) in cluster'\n        :key = 'i'\n        :dx = 'cluster.length<9?(i+0.5) * (500/cluster.length) + 20 + svgConfig.width - 600 :(i+0.5) * (500/cluster.length) + 17 + svgConfig.width - 600'\n        dy = 165\n        text-anchor = 'middle'\n        font-weight = 'bold'\n        :font-size = 'cluster.length<9? 24 : 15'\n        fill = 'black'\n        @mouseover = 'clusterHighlight(i)'\n        @mouseout = 'outerOut()'\n        >\n            {{i+1}}\n        </text>\n        <text \n        :dx = '120+svgConfig.width - 450'\n        dy = 135\n        font-size = 25\n        font-weight = 'bold'\n        fill = 'black'\n        text-anchor = 'middle'>\n          cluster\n        </text>\n        <text\n        :dx = '120+svgConfig.width - 450'\n        dy = 835\n        font-size = 25\n        font-weight = 'bold'\n        fill = 'black'\n        text-anchor = 'middle'>\n          weight\n        </text>\n      </g> -->\n      <g @click = 'innerLinkFlag = !innerLinkFlag'>\n        <rect id = 'btnIndexLink'\n        :x = 'svgConfig.width - 110'\n        :y = '20'\n        :fill = 'innerLinkFlag? \"#5aeaf1\":\"lightgrey\"'></rect>\n        <text\n        :dx = 'svgConfig.width - 65'\n        :dy = '45'\n        fill = 'black'\n        text-anchor = 'middle'>\n          inner link\n        </text>\n      </g>\n      \n      <g @click = 'outerLinkFlag = !outerLinkFlag'>\n        <rect id = 'btnIndexLink'\n        :x = 'svgConfig.width - 210'\n        :y = '20'\n        :fill = 'outerLinkFlag? \"#5aeaf1\":\"lightgrey\"'></rect>\n        <text\n        :dx = 'svgConfig.width - 165'\n        :dy = '45'\n        fill = 'black'\n        text-anchor = 'middle'>\n          outer link\n        </text>\n      </g>\n\n      <g @click = 'this.$store.commit(\"changeStoryBtn\"),\n        this.$store.commit({\n          type:`changeStoryText`,\n          text:storyTest\n        })'>\n        <rect id = 'btnIndexLink'\n        :x = 'svgConfig.width - 310'\n        :y = '20'\n        :fill = 'this.$store.state.story.btn? \"#5aeaf1\":\"lightgrey\"'></rect>\n        <text\n        :dx = 'svgConfig.width - 265'\n        :dy = '45'\n        fill = 'black'\n        text-anchor = 'middle'>\n          Show story\n        </text>\n      </g>\n      \n    <g id = 'graph'\n    :transform = '\"translate(\"+[-svgConfig.width* 0.2,0]+\")\"'>\n      <g id = 'outerLinks' v-show = 'outerLinkFlag'>\n        \n      </g>\n\n      <g id = 'outerCircle' v-if = 'actionList.length>4'>\n   \n        <path v-for = '(d,i) in arcData'\n        :key = 'i'\n        :d = 'arc(d,i)'\n        :fill = 'd.color'\n        fill-opacity = '0.8'\n        :transform = \"'translate('+[svgConfig.width/2,svgConfig.height/2]+')'\"> \n        </path>\n\n        <circle v-for = '(d,i) in actionNodes'\n        :key = 'i'\n        :cx = 'd.xy[0]'\n        :cy = 'd.xy[1]'\n        r = 10\n        :fill = 'color(d.data.view)'\n        stroke = 'white'\n        @mouseover = 'outerTip(d), outerHighlight(d)'\n        @mouseout = 'hover.flag = false, outerOut()'\n        @click = 'rebuildState(d.states)'>  \n        </circle>\n        \n      </g>\n\n      <g id = 'innerLinks' v-show = 'innerLinkFlag'>\n          \n        \n      </g>\n\n      <g id = 'innerGraph' >\n        \n      </g>\n      \n      \n    </g>\n    \n      <g id = 'tip' v-if = 'hover.flag && hover.type == \"outer\"'>\n        \n        <rect height = 180\n        :width = 'hover.data.data.desc0.length>12?(hover.data.data.desc0.length+4) *20 : 300'\n        fill = 'black'\n        fill-opacity = 0.7\n        :x = \"XY[0] +10 - svgConfig.width * 0.2\"\n        :y = \"XY[1] - 30\"\n        rx = 20>  \n        </rect>\n        \n        <text fill = 'red' font-size=\"24\" :dx = 'XY[0]+20 - this.svgConfig.width*0.2' :dy = 'XY[1] '>{{hover.data.data.desc0}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20 - this.svgConfig.width*0.2' :dy = 'XY[1] +25'>Interaction: {{hover.data.data.obj}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20- this.svgConfig.width*0.2' :dy = 'XY[1] +45'>View: {{ hover.data.data.view.substring(hover.data.data.view.length-1,hover.data.data.view.length)}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20- this.svgConfig.width*0.2' :dy = 'XY[1] +65'>Time stamp: {{hover.data.data.timeStamp.toFixed(2)}}</text>\n        <image v-bind:href='hover.data.data.pic' :width= 50 :height=50 :dx = 'XY[0]+20- this.svgConfig.width*0.2' :dy = 'XY[1] +85'/>\n\n        <!-- <text :dx = 'XY[0]+20' :dy = 'XY[1] +55'>{{'data:'+hover.data.data}}</text>\n        <text :dx = 'XY[0]+20' :dy = 'XY[1] +75'>{{'type:' +(hover.data.lastTime?(\"hover for \"+hover.data.lastTime.toFixed(2) + \" seconds\"):\"click\")}}</text> -->\n      </g>\n      \n      <g id = 'tip' v-if = 'hover.flag && hover.type == \"inner\"'>\n        <rect height = 100\n        :width = 'hover.data.name.length>10?(hover.data.name.length+5) *15 +10:230'\n        fill = 'black'\n        fill-opacity = 0.7\n        :x = \"XY[0] +10\"\n        :y = \"XY[1] - 30\"\n        rx = 20>\n           \n        </rect>\n\n        <text fill = 'white' :dx = 'XY[0]+20' :dy = 'XY[1] - 5'>Name: {{hover.data.name}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20' :dy = 'XY[1] +15'>Type: {{hover.data.type}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20' :dy = 'XY[1] +35'>Count: {{hover.data.count}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20' :dy = 'XY[1] +55'>Duration: {{hover.data.dura}}</text>\n        <!-- <text :dx = 'XY[0]+20' :dy = 'XY[1] +55'>{{'data:'+hover.data.data}}</text>\n        <text :dx = 'XY[0]+20' :dy = 'XY[1] +75'>{{'type:' +(hover.data.lastTime?(\"hover for \"+hover.data.lastTime.toFixed(2) + \" seconds\"):\"click\")}}</text> -->\n      </g>\n\t</svg>\n\t\n</template>\n\n<script>\n\timport * as d3 from \"d3\"\n  \n\texport default{\n\t\tname:'graphNew',\n    \n\t\tdata(){\n\t\t\treturn{\n\t\t\t\tcolor:d3.scale.category10(),\n\t\t\t\tsvgConfig:{\n\t\t\t\t\theight:this.$store.state.height * 0.95,\n\t\t\t\t\twidth:this.$store.state.width * 0.95,\n\t\t\t\t\tbackgroundColor:\"black\",\n\t\t\t\t\topacity:0.8,\n\t\t\t\t},\n        innerLinkFlag:true,\n        outerLinkFlag:true,\n        hover:{\n          flag:false,\n          data:{},\n          type:'inner'\n        },\n        // statesSelected:{\n        //   selected:'',\n        //   leaf:''\n        // },\n        XY:[],\n        storyBtn :false\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t},\n\t\tmounted(){\n      \n\t\t},\n\t\tcomputed:{\n      nCluster(){\n        let sol = []\n        for(let i = 0;i<this.cluster.length;i++){\n          let t = this.cluster[i]\n          let tmp = {}\n          tmp['nodes'] = t.nodes\n          tmp['count'] = t.count\n          tmp['time'] = t.time\n          if(this.diction[i]>=0){\n            tmp['desc'] = this.diction[i]\n          }\n          else{\n            tmp['desc'] = null\n          }\n          sol.push(tmp)\n        }\n        return sol\n      },\n\n      diction(){\n        let sol = {}\n        for(let i = 0;i<this.cluster.length;i++){\n          let t = this.cluster[i].nodes\n          if(t.length<5){\n            let tmp = []\n            \n            for(let j of t){\n              tmp.push(j.name)\n            }\n            //console.log(tmp)\n            for(let j = 0;j<this.actToData.length;j++){\n              let res = true\n              //console.log(tmp,this.actToData[j])\n              for(let k of this.actToData[j]){\n                \n                if( tmp.indexOf(k)  === -1){\n                  res = false\n                }\n              }\n              \n              if(res == true){\n                sol[i] = j\n                break\n              }\n            }\n\n          }\n        }\n        return sol\n      },\n\n      actToData(){\n        let sol = []\n        //console.log(this.actionNodes)\n        for(let i = 0;i<this.actionNodes.length;i++){\n          let t = this.actionNodes[i].data.data\n          let tmp = []\n          \n          if(t.attribute){\n            tmp.push(t.attribute)\n          }\n          if(t.industry){\n            tmp.push(t.industry)\n          }\n          for(let j of t.company){\n            tmp.push(j)\n          }\n          for(let j of t.province){\n            tmp.push(j)\n          }\n          sol.push(tmp)\n        }\n        return sol\n      },\n\n      imgStory(){\n        let sol = []\n        for(let i = 0;i<this.actionNodes.length;i++){\n          sol.push(this.actionNodes[i].data.desc)\n        }\n        return sol\n      },\n\n      storyTest(){\n        let story = []\n        for(let i = 0;i<this.newCluster.length;i++){\n          if(i === 0){\n            let tmp = {}\n            let a1 = this.getStory(this.newCluster[i].parent)\n            let first\n            if(a1.length == 1){\n            first = \"The user is most concerned about \" + a1[0] + '.'\n            }\n            else if(a1.length == 2){\n            first = \"The user is most concerned about \" + a1[0] + ' and ' + a1[1] +  '.'\n            }\n            tmp['main'] = first\n            tmp['sub'] = []\n            for(let j = 0;j<this.newCluster[i].son.length;j++){\n              let t = this.newCluster[i].son[j]\n              if(t.desc>=0){\n                tmp['sub'].push({id:t.desc,desc:this.imgStory[t.desc]})\n              }\n              \n            }\n            story.push(tmp)\n          }\n          else if(i >= 1){\n            let tmp = {}\n            let a1 = this.getStory(this.newCluster[i].parent)\n            let first\n            if(a1.length == 1){\n            first = \"The user is also concerned about \" + a1[0] + '.'\n            }\n            else if(a1.length == 2){\n            first = \"The user is also concerned about \" + a1[0] + ' and ' + a1[1] +  '.'\n            }\n            tmp['main'] = first\n            tmp['sub'] = []\n            for(let j = 0;j<this.newCluster[i].son.length;j++){\n              let t = this.newCluster[i].son[j]\n              if(t.desc>=0){\n                tmp['sub'].push({id:t.desc,desc:this.imgStory[t.desc]})\n              }\n              \n            }\n            story.push(tmp)\n          }\n        }\n        return story\n      },\n\n      storyPieces(){\n        let sol = []\n        for(let i = 0;i<this.cluster.length;i++){\n          sol.push(this.getStory(this.cluster[i]))\n        }\n        return sol\n      },\n      newCluster(){\n        let sol = []\n        let tmp2 = []\n        for(let i = 0;i<this.nCluster.length-1;i++){\n          let tmp = []\n          for(let j = i+1;j<this.nCluster.length;j++){\n            if(this.judgeSub(this.nCluster[i],this.nCluster[j])){\n              tmp.push(this.nCluster[j])\n              tmp2.push(j)\n            }\n          }\n          if(tmp2.indexOf(i) == -1){\n            sol.push({parent:this.nCluster[i],son:tmp})\n          }\n        }\n        return sol\n      },\n\n      lenScale(){\n        return d3.scale.linear().domain([0,this.maxWeight]).range([5,75])\n      },\n\n      maxWeight(){\n        \n        let maxi = 0\n        for(let i = 0;i<this.cluster.length;i++){\n          let weight = this.getWeight(this.cluster[i])\n          if(weight > maxi){\n            maxi = weight\n          }\n        }\n        return maxi\n      },\n\n      linkDistance(){\n        if (this.dataNodes.length < 10){\n          return 200\n        }\n        else if(this.dataNodes.length < 20){\n          return 150\n        }\n        else if(this.dataNodes.length< 30){\n          return 100\n        }\n        else{\n          return 50\n        }\n      },\n\n      community(){\n        let sol  = []\n        for(let i = 0;i<this.dataNodes.length;i++){\n          let tmp = []\n          for(let j = 0;j<this.cluster.length;j++){\n            tmp.push(0)\n          }\n          sol.push(tmp)\n        }\n        for(let i = 0;i<this.cluster.length;i++){\n          for(let j = 0;j<this.cluster[i].nodes.length;j++){\n            let row = this.cluster[i].nodes[j].index\n            let col = i\n            sol[row][col] = 1\n          }\n        }\n        return sol\n      },\n\n      cluster(){\n        let sol = []\n        let ref = []\n        \n        for(let i = 0;i<this.dataNodes.length;i++){\n          let provFlag = false\n          let compFlag = false\n          if(this.dataNodes[i].type != 'attribute'){\n          //if(this.dataNodes[i].name != 'patent_num' && this.dataNodes[i].name != 'proportion' && this.dataNodes[i].name != 'comparison'){\n            let tmp = [this.dataNodes[i]]\n            let sumTime = this.dataNodes[i].dura\n            let sumCount = this.dataNodes[i].count\n            let tmp2 = [i]\n            for(let j = 0;j<this.dataLinks.length;j++){\n              if(this.dataLinks[j].i == i){\n                if(this.dataNodes[this.dataLinks[j].j].type == 'company'){\n                  compFlag = true\n                }\n                if(this.dataNodes[this.dataLinks[j].j].type == 'province'){\n                  provFlag = true\n                }\n                tmp.push(this.dataNodes[this.dataLinks[j].j])\n                tmp2.push(this.dataLinks[j].j)\n                sumTime+=this.dataNodes[this.dataLinks[j].j].dura\n                sumCount+=this.dataNodes[this.dataLinks[j].j].count\n              }\n              if(this.dataLinks[j].j == i){\n                if(this.dataNodes[this.dataLinks[j].i].type == 'company'){\n                  compFlag = true\n                }\n                if(this.dataNodes[this.dataLinks[j].i].type == 'province'){\n                  provFlag = true\n                }\n                tmp.push(this.dataNodes[this.dataLinks[j].i])\n                tmp2.push(this.dataLinks[j].i)\n                sumTime+=this.dataNodes[this.dataLinks[j].i].dura\n                sumCount+=this.dataNodes[this.dataLinks[j].j].count\n              }\n              \n            }\n            tmp2.sort()\n            let st = tmp2.join('+')\n            if(ref.indexOf(st) == -1 && !(compFlag && provFlag)){\n              ref.push(st)\n              sol.push({nodes:tmp,count:sumCount,time:sumTime})\n            }\n            \n          }\n          \n          \n        }\n        sol.sort((a,b)=>{\n          return this.getWeight(b) - this.getWeight(a)\n        })\n        return sol\n      },\n\n      adjMatrix(){\n        let sol = []\n        let n = this.dataNodes.length\n        var getWeight = (i,j,links)=>{\n          if(i == j){\n            return 0\n          }\n          for(let k = 0;k<links.length;k++){\n            if((links[k].i == i && links[k].j == j)||\n            (links[k].i == j && links[k].j == i)){\n              return links[k].weight\n            }\n          }\n          return 0\n        }\n        for(let i = 0;i<n;i++){\n          let vector = []\n          for(let j = 0;j<n;j++){\n            vector.push(getWeight(i,j,this.dataLinks))\n          }\n          sol.push(vector)\n        }\n        return sol\n        \n      },\n      arc(){\n        return d3.svg.arc().outerRadius(this.svgConfig.height/2-18) \n                        .innerRadius(this.svgConfig.height/2-22);\n      },\n\n      // 外圈弧长的数据\n      arcData(){\n        let endR = Math.PI * 2  * 350/360\n        let endT = this.actionList[this.actionList.length-1].timeStamp\n        let sol = []\n        for(let i = 0;i<this.actionList.length-1;i++){\n          \n          sol.push({\n            startAngle:this.actionList[i].timeStamp/endT * endR,\n            endAngle:this.actionList[i+1].timeStamp/endT *endR,\n            color:this.color(this.actionList[i].view)\n          })\n        }\n        return sol\n        /* var data = [ \n            {startAngle: 0, endAngle: 0.1 * endAngle},\n            {startAngle: 0.1 * endAngle, endAngle: 0.2 * endAngle},\n            {startAngle: 0.2 * endAngle, endAngle: 0.4 * endAngle},\n            {startAngle: 0.4 * endAngle, endAngle: 0.6 * endAngle},        \n            {startAngle: 0.6 * endAngle, endAngle: 0.7 * endAngle},        \n            {startAngle: 0.7 * endAngle, endAngle: 0.9 * endAngle},        \n            {startAngle: 0.9 * endAngle, endAngle: endAngle}\n        ]; */\n      },\n      force(){\n          return d3.layout.force()\n            .size([this.svgConfig.width,this.svgConfig.height])\n            .on(\"tick\",this.tick)\n            .gravity(0.1)\n            .charge(-1000)\n            .friction(0.85)\n      },\n\t\t\tactionList(){\n\t\t\t\treturn this.$store.state.user.actionList\n\t\t\t},\n      visualStates(){\n        return this.$store.state.visualStates\n      },\n      visualList(){\n        return this.$store.state.visualList\n      },\n      screenShot(){\n        return this.$store.state.screenShot\n      },\n      selected(){\n        return this.$store.state.selected\n      },\n\n\n      // 外圈的动作节点\n      actionNodes(){\n        if(this.actionList.length<2){\n          return []\n        }\n        else{\n          let center = [this.svgConfig.width/2,this.svgConfig.height/2]\n          let endT = this.actionList[this.actionList.length-1].timeStamp\n          let endR = Math.PI * 2  * 350/360\n          let R = this.svgConfig.height/2 - 20\n          var getPos = (data,outerRadius,endTime,endRadius)=>{\n            let alpha = (data.timeStamp )/(endTime) * endRadius\n            return [center[0] + outerRadius * Math.sin(alpha),\n            center[1] - outerRadius * Math.cos(alpha)]\n          }\n          let sol = []\n          for(let i = 0;i<this.actionList.length;i++){\n            sol.push({xy:getPos(this.actionList[i],R,endT,endR), data:this.actionList[i], states:this.visualList[i+1]})\n          }\n          return sol\n        }\n        \n        \n      },\n      dataNodes(){\n        let sol = []\n        if(this.actionList.length<2){\n          return sol\n        }\n        else{\n          let lst = []\n          for(let i = 0;i<this.actionList.length;i++){\n            if(this.actionList[i].data.industry!=''){\n                \n                lst.push({name:this.actionList[i].data.industry,type:'industry',\n                time:i < this.actionList.length-1?this.actionList[i+1].timeStamp - this.actionList[i].timeStamp:10})\n\n            }\n            if(this.actionList[i].data.company.length>0){\n              for(let j = 0;j<this.actionList[i].data.company.length;j++){\n                lst.push({name:this.actionList[i].data.company[j],type:'company',\n                time:i < this.actionList.length-1?this.actionList[i+1].timeStamp - this.actionList[i].timeStamp:10})\n              }\n            }\n            if(this.actionList[i].data.province.length>0){\n              for(let j = 0;j<this.actionList[i].data.province.length;j++){\n                lst.push({name:this.actionList[i].data.province[j],type:'province',\n                time:i < this.actionList.length-1?this.actionList[i+1].timeStamp - this.actionList[i].timeStamp:10})\n              }\n            }\n            if(this.actionList[i].data.attribute!=''){\n              lst.push({name:this.actionList[i].data.attribute,type:'attribute',\n              time:i < this.actionList.length-1?this.actionList[i+1].timeStamp - this.actionList[i].timeStamp:10})\n            }\n          }\n          // console.log(lst)\n          let tmp = []\n          var count = (str,arr)=>{\n            let c = 0\n            for(let i = 0;i<arr.length;i++){\n              if(arr[i].name == str){\n                c++\n              }\n            }\n            return c\n          }\n          \n          var dura = (str,arr)=>{\n            let c = 0\n            for(let i = 0;i<arr.length;i++){\n              if(arr[i].name == str){\n                c += arr[i].time\n              }\n            }\n            return parseFloat(c.toFixed(2))\n          }\n          \n          let ind = 0\n          for(let i = 0;i<lst.length;i++){\n            if(tmp.indexOf(lst[i].name) == -1){\n              tmp.push(lst[i].name)\n              sol.push({index:ind,name:lst[i].name,type:lst[i].type,count:count(lst[i].name,lst),dura:dura(lst[i].name,lst)})\n              ind++\n            }\n          }\n          return sol\n        }\n      },\n      dataNodes2(){\n        return this.dataNodes.length\n      },\n      dataLinks(){\n        let sol = []\n        if(this.actionList.length<2){\n          return []\n        }\n        else{\n          var judgeIn = (key1,key2,lst)=>{\n            for(let i = 0;i<lst.length;i++){\n              if((lst[i].source.name == key1 && lst[i].target.name == key2)\n              ||(lst[i].source.name == key2 && lst[i].target.name == key1)){\n                return i\n              }\n            }\n            return 'notIn'\n          }\n          var getIndex = (key,lst)=>{\n            for(let i = 0;i<lst.length;i++){\n              if(lst[i].name == key){\n                return i\n              }\n            }\n          }\n          for(let i = 0;i<this.actionNodes.length;i++){\n            let tmp = []\n            if(this.actionList[i].data.industry!=''){\n              tmp.push(this.actionList[i].data.industry)\n            }\n            if(this.actionList[i].data.company.length>0){\n              for(let j = 0;j<this.actionList[i].data.company.length;j++){\n                tmp.push(this.actionList[i].data.company[j])\n              }\n            }\n            if(this.actionList[i].data.province.length>0){\n              for(let j = 0;j<this.actionList[i].data.province.length;j++){\n                tmp.push(this.actionList[i].data.province[j])\n              }\n            }\n            if(this.actionList[i].data.attribute!=''){\n              tmp.push(this.actionList[i].data.attribute)\n            }\n            \n            for(let j = 0;j<tmp.length-1;j++){\n              for(let k = j+1;k<tmp.length;k++){\n                if(judgeIn(tmp[j],tmp[k],sol) == 'notIn' && tmp[j]!=tmp[k]){\n                  sol.push({source:this.dataNodes[getIndex(tmp[j],this.dataNodes)],\n                  target:this.dataNodes[getIndex(tmp[k],this.dataNodes)],\n                  weight:1,\n                  i:getIndex(tmp[j],this.dataNodes),\n                  j:getIndex(tmp[k],this.dataNodes)})\n                }\n                else{\n                  sol[judgeIn(tmp[j],tmp[k],sol)].weight++\n                }\n              }\n            }\n          }\n        }\n        return sol\n      },\n      interactionLinks(){\n        let sol = []\n        if(this.actionList.length<2){\n          return []\n        }\n        else{\n          var getIndex = (key,lst)=>{\n            for(let i = 0;i<lst.length;i++){\n              if(lst[i].name == key){\n                return i\n              }\n            }\n          }\n          for(let i = 0;i<this.actionNodes.length;i++){\n            let tmp = []\n            if(this.actionList[i].data.industry!=''){\n              tmp.push(this.actionList[i].data.industry)\n            }\n            if(this.actionList[i].data.company.length>0){\n              for(let j = 0;j<this.actionList[i].data.company.length;j++){\n                tmp.push(this.actionList[i].data.company[j])\n              }\n            }\n            if(this.actionList[i].data.province.length>0){\n              for(let j = 0;j<this.actionList[i].data.province.length;j++){\n                tmp.push(this.actionList[i].data.province[j])\n              }\n            }\n            if(this.actionList[i].data.attribute!=''){\n              tmp.push(this.actionList[i].data.attribute)\n            }\n            for(let j = 0;j<tmp.length;j++){\n              sol.push({\n                source:this.actionNodes[i],\n                target:this.dataNodes[getIndex(tmp[j],this.dataNodes)]\n              })\n            }\n            \n            \n          }\n          return sol\n        }\n      },\n\t\t\t\n\t\t},\n\t\tmethods:{\n      rebuildState(node){\n        this.$store.commit('showGraph')\n        // this.$store.commit()\n        this.$store.commit({\n          type: 'rebuildStates',\n          Aselected: node.Aselected,\n          Aleaf: node.Aleaf,\n\t\t\t\t\tBflare0 :node.Bflare0,\n\t\t\t\t\tBflare1 :node.Bflare1,\n\t\t\t\t\tBflareSum :node.BflareSum,\n\t\t\t\t\tBflareSum2 :node.BflareSum2,\n\t\t\t\t\tBflareSum3 :node.BflareSum3,\n          BtreeTypeFlag: node.BtreeTypeFlag,\n          Bsplited: node.Bsplited,\n          Bdepth: node.Bdepth,\n          BrootName: node.BrootName,\n          BtreeData: node.BtreeData,\n          Dtitle: node.Dtitle\n        })\n        // this.\n      },\n      getStory(cluster){\n        //let company = []\n        //let province = []\n        let entity = []\n        let attribute = []\n        let industry = []\n        let comparison = []\n        \n        for(let i = 0;i<cluster.nodes.length;i++){\n          if(cluster.nodes[i].type == 'company'){\n            entity.push(cluster.nodes[i].name)\n          }\n          else if(cluster.nodes[i].type == 'province'){\n            entity.push(cluster.nodes[i].name)\n          }\n          else if(cluster.nodes[i].type == 'attribute'){\n            if(cluster.nodes[i].name == 'proportion'){\n              attribute.push('patent proportion')\n            }\n            else if(cluster.nodes[i].name == 'patent_num'){\n              attribute.push('patent number')\n            }\n            else{\n              comparison.push(cluster.nodes[i].name)\n            }\n            \n          }\n          else if(cluster.nodes[i].type == 'industry'){\n            industry.push(cluster.nodes[i].name)\n          }\n        }\n        \n        let wordEntity = ''\n        let wordIndustry = ''\n        let wordAttribute = ''\n        let wordComparison = ''\n        \n        if(attribute.length>0){\n          if(attribute.length==1){\n            wordAttribute = attribute[0]\n          }\n          else if(attribute.length == 2){\n            wordAttribute = attribute[0] + ' and ' + attribute[1]\n          }\n          else{\n            wordAttribute = attribute.join(', ')\n          }\n        }\n        \n        if(comparison.length>0){\n          if(comparison.length==1){\n            wordComparison = comparison[0]\n          }\n          else if(comparison.length == 2){\n            wordComparison = comparison[0] + ' and ' + comparison[1]\n          }\n          else{\n            wordComparison = comparison.join(', ')\n          }\n        }\n        if(entity.length>0){\n          if(entity.length==1){\n            wordEntity = entity[0]\n          }\n          else if(entity.length == 2){\n            wordEntity = entity[0] + ' and ' + entity[1]\n          }\n          else{\n            wordEntity = entity.join(', ')\n          }\n        }\n        \n        if(industry.length>0){\n          if(industry.length==1){\n            wordIndustry = industry[0]\n          }\n          else if(industry.length == 2){\n            wordIndustry = industry[0] + ' and ' + industry[1]\n          }\n          else{\n            wordIndustry = industry.join(', ')\n          }\n        }\n        let piece = []\n        if(wordComparison){\n          let text = wordComparison === \"similarity\" || wordComparison === \"complement\"? 'the ' + wordComparison + ' between ' + wordEntity : 'the ' + wordComparison + ' between ' + wordEntity + ' in ' + wordIndustry \n          piece.push(text)\n        }\n        if(wordAttribute){\n          let text = 'the ' + wordAttribute + ' of ' + wordEntity + ' in ' + wordIndustry \n          piece.push(text)\n        }\n        return piece\n        \n      },\n      judgeSub(parent,son){\n        //console.log('123123123',parent,son)\n        for(let i = 0;i< son.nodes.length;i++){\n          //console.log('12312331',i)\n          if(parent.nodes.indexOf(son.nodes[i]) == -1){\n            return false\n          }\n        }\n        return true\n      },\n      getColor(i,j){\n        let maxi = this.getWeight(this.cluster[j])\n        let maxi2 = 0\n        for(let k = 0;k<this.cluster[j].nodes.length;k++){\n          let tmp = this.cluster[j].nodes[k].count * 5 + this.cluster[j].nodes[k].dura\n          if(tmp > maxi2){\n            maxi2 = tmp\n          }\n        }\n        let scale = d3.scale.linear().domain([0,maxi2/maxi]).range(['#f8de85',\"#da0000\"])\n        return scale((this.dataNodes[i].count * 5 + this.dataNodes[i].dura)/maxi)\n      },\n      getWeight(clu){\n        return clu.count * 5 + clu.time\n      },\n      clusterHighlight(ind){\n        let indexList = []\n        for(let i = 0;i<this.community.length;i++){\n          if(this.community[i][ind] == 1){\n            indexList.push(i)\n          }\n        }\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>indexList.indexOf(d.index)==-1)\n        .style(\"fill-opacity\",0.3)\n        .style(\"stroke-opacity\",0.3)\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>indexList.indexOf(d.index)!=-1)\n        .style(\"fill-opacity\",1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>indexList.indexOf(k.source.index)!=-1 && indexList.indexOf(k.target.index)!=-1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>indexList.indexOf(k.source.index)==-1 || indexList.indexOf(k.target.index)==-1)\n        .style(\"stroke-opacity\",0)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>indexList.indexOf(k.target.index) != -1)\n        .style(\"stroke-opacity\",1)\n        .style(\"stroke-width\",2)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>indexList.indexOf(k.target.index) == -1)\n        .style(\"stroke-opacity\",0)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>indexList.indexOf(k.target.index) != -1)\n        .style(\"fill-opacity\",1)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>indexList.indexOf(k.target.index) == -1)\n        .style(\"fill-opacity\",0)\n        \n      },\n\n      outerTip(d){\n        \n        this.XY = [d.xy[0],d.xy[1]>this.svgConfig.height/2? d.xy[1]-30  : d.xy[1]+30]\n        this.hover.flag = true\n        this.hover.type = 'outer'\n        this.hover.data = d\n        // console.log(\"hover.data.data.pic\", this.hover.data.data.pic)\n      },\n\n      innerHighlight(d){\n        let tmp = [d.name]\n        \n        for(let i = 0;i<this.dataLinks.length;i++){\n          if(d.name == this.dataLinks[i].target.name){\n            tmp.push(this.dataLinks[i].source.name)\n          }\n          else if(d.name == this.dataLinks[i].source.name){\n            tmp.push(this.dataLinks[i].target.name)\n          }\n        }\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>tmp.indexOf(d.name)==-1)\n        .style(\"fill-opacity\",0.3)\n        .style(\"stroke-opacity\",0.3)\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>tmp.indexOf(d.name)!=-1)\n        .style(\"fill-opacity\",1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>tmp.indexOf(k.source.name)!=-1 && tmp.indexOf(k.target.name)!=-1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>tmp.indexOf(k.source.name)==-1 || tmp.indexOf(k.target.name)==-1)\n        .style(\"stroke-opacity\",0)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>k.target.name == d.name)\n        .style(\"stroke-opacity\",1)\n        .style(\"stroke-width\",2)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>k.target.name != d.name)\n        .style(\"stroke-opacity\",0)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>k.target.name == d.name)\n        .style(\"fill-opacity\",1)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>k.target.name != d.name)\n        .style(\"fill-opacity\",0)\n        \n        \n      },\n      outerHighlight(d){\n        let tmp = []\n        if(d.data.data.industry!=''){\n          tmp.push(d.data.data.industry)\n        }\n        if(d.data.data.company.length>0){\n          for(let j = 0;j<d.data.data.company.length;j++){\n            tmp.push(d.data.data.company[j])\n          }\n        }\n        if(d.data.data.province.length>0){\n          for(let j = 0;j<d.data.data.province.length;j++){\n            tmp.push(d.data.data.province[j])\n          }\n        }\n        if(d.data.data.attribute!=''){\n          tmp.push(d.data.data.attribute)\n        }\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>tmp.indexOf(d.name)==-1)\n        .style(\"fill-opacity\",0.3)\n        .style(\"stroke-opacity\",0.3)\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>tmp.indexOf(d.name)!=-1)\n        .style(\"fill-opacity\",1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>k.source.data.timeStamp == d.data.timeStamp)\n        .style(\"stroke-opacity\",1)\n        .style(\"stroke-width\",2)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>k.source.data.timeStamp != d.data.timeStamp)\n        .style(\"stroke-opacity\",0)\n       \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>k.source.data.timeStamp == d.data.timeStamp)\n        .style(\"fill-opacity\",1)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>k.source.data.timeStamp != d.data.timeStamp)\n        .style(\"fill-opacity\",0)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>tmp.indexOf(k.source.name)!=-1 && tmp.indexOf(k.target.name)!=-1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>tmp.indexOf(k.source.name)==-1 || tmp.indexOf(k.target.name)==-1)\n        .style(\"stroke-opacity\",0)\n        \n        \n        \n      },\n      outerOut(){\n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .style(\"fill-opacity\",1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .style(\"stroke-opacity\",1)\n        .style(\"stroke-width\",2)\n        \n        d3.select(\"#outerLinks\").selectAll(\"line\")\n        .style(\"stroke-opacity\",1)\n        .style(\"stroke-width\",0.5)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        //.filter(k=>k.source.data.timeStamp == d.data.timeStamp)\n        .style(\"fill-opacity\",1)\n        \n      },\n\t\t\tgetAngle(point1,point2){\n\t\t\t\tlet sin = this.tri(point1,point2,\"sin\")\n\t\t\t\treturn Math.asin(sin)\n\t\t\t},\n\t\t\tgetPoint(point1,point2){\n\t\t\t\t\n\t\t\t\tlet r = 15,\n\t\t\t\tangle = Math.PI/9\n\t\t\t\tlet theta = this.getAngle(point1,point2)\n\t\t\t\t\n\t\t\t\tif(point1.xy[0]<point2.x){\n\t\t\t\t\ttheta = Math.PI-theta\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet theta1 = theta - angle,\n\t\t\t\ttheta2 = theta + angle,\n\t\t\t\tsin1 = Math.sin(theta1),\n\t\t\t\tsin2 = Math.sin(theta2),\n\t\t\t\tcos1 = Math.cos(theta1),\n\t\t\t\tcos2 = Math.cos(theta2)\n\t\t\t\t\n\t\t\t\tlet x  = this.getNewPos(point2,point1,-(10 + point2.count * 3) - 10)[0],\n\t\t\t\ty = this.getNewPos(point2,point1,-(10 + point2.count * 3)-10)[1]\n\t\t\t\tlet p1 = [x  + r * cos1,y + r * sin1],\n\t\t\t\tp2 = [x + r * cos2,y + r * sin2],\n\t\t\t\tp3 = [x,y]\n\t\t\t\treturn [p1,p2,p3]\n\t\t\t\t\n\t\t\t},\n\t\t\tlog(){\n\t\t\t\t// console.log('actNode',this.actionNodes)\n        // console.log('dataNode',this.dataNodes)\n        // console.log('dataLink',this.dataLinks)\n        // console.log('interLink',this.interactionLinks)\n        // console.log('arc',this.arcData)\n        // console.log('adjcent',this.adjMatrix)\n        // console.log('cluster',this.cluster)\n        // console.log('matrix',this.community)\n        // console.log('maxWeight',this.maxWeight)\n        // console.log('newCluster',this.newCluster)\n        // console.log('storyPieces',this.storyPieces)\n        // console.log('storyTest',this.storyTest)\n        // console.log('imgStory',this.imgStory)\n        // console.log('act2Data',this.actToData)\n        // console.log('dictionary',this.diction)\n        console.log('selected',this.selected)\n        console.log('actionList', this.actionList)\n        console.log('visualStates', this.visualStates)\n        console.log('visualList', this.visualList)\n        // console.log('screenShot',this.screenShot)\n        //this.createNodes()\n\t\t\t},\n\t\t\ttick(){\n\t\t\t\td3.select(\"#innerGraph\")\n\t\t\t\t.selectAll('circle')\n\t\t\t\t.attr(\"cx\",d=>d.x)\n\t\t\t\t.attr(\"cy\",d=>d.y)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .attr(\"x1\",d=>d.source.x)\n        .attr(\"x2\",d=>d.target.x)\n        .attr(\"y1\",d=>d.source.y)\n        .attr(\"y2\",d=>d.target.y)\n        \n        d3.select(\"#outerLinks\").selectAll(\"line\")\n        .attr(\"x1\",d=>d.source.xy[0])\n        .attr(\"x2\",d=>this.getNewPos(d.target,d.source,-(10 + d.target.count * 3) - 10)[0])\n        .attr(\"y1\",d=>d.source.xy[1])\n        .attr(\"y2\",d=>this.getNewPos(d.target,d.source,-(10 + d.target.count * 3) - 10)[1])\n        \n        d3.select(\"#outerLinks\").selectAll(\"polygon\")\n        .attr(\"points\",d=>this.getPoint(d.source,d.target))\n\t\t\t},\n\t\t\ttri(point1,point2,type){\n       \n\t\t\t\tlet x1 = point1.xy[0],\n\t\t\t\tx2 = point2.x,\n\t\t\t\ty1 = point1.xy[1],\n\t\t\t\ty2 = point2.y,\n\t\t\t\ta = y1-y2,\n\t\t\t\tb = x1-x2,\n\t\t\t\tc =Math.sqrt( a*a + b*b)\n\t\t\t\tif(type == 'sin'){\n\t\t\t\t\treturn a/c\n\t\t\t\t}\n\t\t\t\telse if (type == 'cos'){\n\t\t\t\t\treturn b/c\n\t\t\t\t}\n\t\t\t\telse if(type == 'tan'){\n\t\t\t\t\treturn b==0? 0:a/b\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetNewPos(point1,point2,r){\n\t\t\t\t\n        \n\t\t\t\treturn [point1.x - r * this.tri(point2,point1,\"cos\"),point1.y - r * this.tri(point2,point1,\"sin\")]\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t},\n      createNodes(){\n        \n        this.force\n        .linkStrength(0.8)\n        .linkDistance(100)\n        .nodes(this.dataNodes)\n        .links(this.dataLinks)\n        .start();\n        \n        d3.select(\"#innerGraph\")\n        .selectAll(\"circle\")\n        .data(this.dataNodes)\n        .enter()\n        .append(\"circle\")\n        .call(this.force.drag)\n        \n        d3.select(\"#innerGraph\")\n        .selectAll(\"circle\")\n        .data(this.dataNodes)\n        .attr(\"class\",\"dots\")\n        .attr(\"r\",20)\n        .style(\"fill\",d=> this.color(d.type))\n        .style(\"stroke\",'white')\n        \n        \n        d3.select(\"#innerLinks\")\n        .selectAll(\"line\")\n        .data(this.dataLinks)\n        .enter()\n        .append(\"line\")\n        \n        d3.select(\"#innerLinks\")\n        .selectAll(\"line\")\n        .data(this.dataLinks)\n        .attr(\"stroke\",'red')\n        .attr('stroke-width',2)\n      }\n\t\t\t\n\t\t},\n\t\twatch:{\n\t\t\tdataNodes(){\n        this.force\n        .linkStrength(0.8)\n        .linkDistance(this.linkDistance)\n        .nodes(this.dataNodes)\n        .links(this.dataLinks)\n        .start();\n        \n        d3.select(\"#innerGraph\")\n        .selectAll(\"circle\")\n        .data(this.dataNodes)\n        .enter()\n        .append(\"circle\")\n        .call(this.force.drag)\n        \n        d3.select(\"#innerGraph\")\n        .selectAll(\"circle\")\n        .data(this.dataNodes)\n        .attr(\"r\",d=>10 + d.count * 3)\n        .style(\"fill\",d=> this.color(d.type))\n        .style(\"stroke\",'white')\n          .on(\"mouseover\",d=>{\n              this.hover.type = 'inner'\n              this.hover.flag = true\n              this.hover.data = d\n              //console.log(d)\n              this.innerHighlight(d)\n            \n          })\n          .on(\"mousemove\",()=>{\n            let wid = this.hover.data.name.length>10?(this.hover.data.name.length+5) * 10 +10:230\n            this.XY = [event.offsetX>this.svgConfig.width - wid -20? event.offsetX - wid -20: event.offsetX,event.offsetY]\n          })\n          .on(\"mouseout\",()=>{\n            \n              this.hover.flag = false;\n              this.hover.data = {}\n              this.outerOut()\n          });\n        \n        d3.select(\"#innerGraph\")\n        .selectAll(\"circle\")\n        .data(this.dataNodes)\n        .exit()\n        .remove()\n        \n        d3.select(\"#innerLinks\")\n        .selectAll(\"line\")\n        .data(this.dataLinks)\n        .enter()\n        .append(\"line\")\n        \n        d3.select(\"#innerLinks\")\n        .selectAll(\"line\")\n        .data(this.dataLinks)\n        .attr(\"stroke\",'red')\n        .attr('stroke-width',2)\n        \n        d3.select(\"#innerLinks\")\n        .selectAll(\"line\")\n        .data(this.dataLinks)\n        .exit()\n        .remove()\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .data(this.interactionLinks)\n        .enter()\n        .append(\"line\")\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .data(this.interactionLinks)\n        .attr(\"stroke\",'grey')\n        .attr('stroke-width',0.5)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .data(this.interactionLinks)\n        .exit()\n        .remove()\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .data(this.interactionLinks)\n        .enter()\n        .append(\"polygon\")\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .data(this.interactionLinks)\n        .attr('fill','grey')\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .data(this.interactionLinks)\n        .exit()\n        .remove()\n        /* <polygon v-if = 'getNewPos(d.source,d.target,15)[0]'\n        :points = 'getPoint(d.source,d.target)'\n        :fill = 'linksColor(d)'\n        :fill-opacity = 'linksOpacity(d)'>\n        </polygon> */\n        \n      }\n\t\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t}\n</script>\n\n<style>\n\t#graphSvg{\n\t\tposition:absolute;\n\t\tleft:50px;\n\t\ttop:70px;\n\t\tbackground-color: rgb(255, 255, 255);\n\t\topacity:1;\n\t\tborder: 5px solid rgb(199, 198, 198);\n    border-radius: 50px;\n\t}\n\t#btnIndexLink ,#btnLink{\n\t\tposition:absolute;\n\t\theight :40px;\n\t\twidth : 90px;\n\t\trx:10px;\n\t}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}