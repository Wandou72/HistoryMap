{"remainingRequest":"C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\node_modules\\vue-loader\\dist\\index.js??ruleSet[0].use[1]!C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\src\\components\\graphNew.vue?vue&type=template&id=f98cce8e","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\src\\components\\graphNew.vue","mtime":1652715168172},{"path":"C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\node_modules\\vue-loader\\dist\\templateLoader.js","mtime":1628298225000},{"path":"C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\node_modules\\vue-loader\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgkKCTxzdmcgaWQgPSAnZ3JhcGhTdmcnIAoJOmhlaWdodCA9ICdzdmdDb25maWcuaGVpZ2h0JyA6d2lkdGggPSAnc3ZnQ29uZmlnLndpZHRoJwoJQGNsaWNrID0gJ2xvZygpJz4KICAgICAgPCEtLSA8ZyBpZCA9ICdtYXRyaXgnCiAgICAgIHRyYW5zZm9ybSA9ICd0cmFuc2xhdGUoMCwtMjApJz4KICAgICAgICA8ZyBjbGFzcyA9ICd3ZWlnaHQnIHYtZm9yID0gJyhkLGkpIGluIGNsdXN0ZXInCiAgICAgICAgOmtleSA9ICdpJz4KICAgICAgICAgIDxyZWN0CiAgICAgICAgICA6eCA9ICdpICogKDUwMC9jbHVzdGVyLmxlbmd0aCkgKyA1KzIwICsgc3ZnQ29uZmlnLndpZHRoIC0gNjAwJwogICAgICAgICAgeSA9IDcyNQogICAgICAgICAgOmhlaWdodCA9ICdsZW5TY2FsZShnZXRXZWlnaHQoZCkpJwogICAgICAgICAgOndpZHRoID0gJzUwMC9jbHVzdGVyLmxlbmd0aC0xNScKICAgICAgICAgIGZpbGwgPSAnIzU0ZjJmMycKICAgICAgICAgIHJ4ID0gNQogICAgICAgICAgCiAgICAgICAgICA+CiAgICAgICAgICA8L3JlY3Q+CiAgICAgICAgICA8dGV4dAogICAgICAgICAgOmR4ID0gJ2kgKiAoNTAwL2NsdXN0ZXIubGVuZ3RoKSArIDUgKyg1MDAvY2x1c3Rlci5sZW5ndGgtMTUpLzIgKzIwICsgc3ZnQ29uZmlnLndpZHRoIC0gNjAwJwogICAgICAgICAgOmR5ID0gJzc0MCArIGxlblNjYWxlKGdldFdlaWdodChkKSknCiAgICAgICAgICBmaWxsID0gJ2JsYWNrJwogICAgICAgICAgdGV4dC1hbmNob3IgPSAnbWlkZGxlJwogICAgICAgICAgZm9udC13ZWlnaHQgPSAnYm9sZCcKICAgICAgICAgIGZvbnQtc2l6ZSA9IDEyCiAgICAgICAgICAKICAgICAgICAgID4KICAgICAgICAgICAge3soZ2V0V2VpZ2h0KGQpL21heFdlaWdodCkudG9GaXhlZCgyKX19CiAgICAgICAgICA8L3RleHQ+CiAgICAgICAgPC9nPgogICAgICAgIDxnIGNsYXNzID0gJ3Jvdycgdi1mb3IgPSAnKGQsaSkgaW4gY29tbXVuaXR5JwogICAgICAgIDprZXkgPSAnaSc+CiAgICAgICAgICA8cmVjdCB2LWZvciA9ICcoayxqKSBpbiBkJwogICAgICAgICAgOmtleSA9ICdqJwogICAgICAgICAgOnggPSAnaiAqICg1MDAvZC5sZW5ndGgpICsgMjAgKyBzdmdDb25maWcud2lkdGggLSA2MDAnCiAgICAgICAgICA6eSA9ICdpICogKDU1MC9jb21tdW5pdHkubGVuZ3RoKSArIDIwICsgMTUwJwogICAgICAgICAgOmhlaWdodCA9ICc1NTAvY29tbXVuaXR5Lmxlbmd0aCAtIDUnCiAgICAgICAgICA6d2lkdGggPSAnNTAwL2QubGVuZ3RoLTUnCiAgICAgICAgICA6ZmlsbCA9ICdrID09IDE/Z2V0Q29sb3IoaSxqKToibGlnaHRncmV5IicKICAgICAgICAgIHN0cm9rZSA9ICd3aGl0ZScKICAgICAgICAgIDpzdHJva2Utd2lkdGggPSAnY2x1c3RlcltqXS5ub2Rlc1swXS5pbmRleCA9PSBpPyAxMDowJwogICAgICAgICAgc3Ryb2tlLWRhc2hhcnJheSA9ICc0JwogICAgICAgICAgCiAgICAgICAgICA+CiAgICAgICAgICA8L3JlY3Q+CiAgICAgICAgICA8dGV4dAogICAgICAgICAgOmR4ID0gJ3N2Z0NvbmZpZy53aWR0aCAtIDYwMCArIDEwJwogICAgICAgICAgOmR5ID0gJyhpKzAuNSkgKiAoNTUwL2NvbW11bml0eS5sZW5ndGgpICsgMjUgKyAxNTAgJwogICAgICAgICAgdGV4dC1hbmNob3IgPSAnZW5kJwogICAgICAgICAgZmlsbCA9ICdibGFjaycKICAgICAgICAgID4KICAgICAgICAgICAge3tkYXRhTm9kZXNbaV0udHlwZSA9PSAnYXR0cmlidXRlJz9kYXRhTm9kZXNbaV0ubmFtZTpkYXRhTm9kZXNbaV0ubmFtZS5sZW5ndGg+PTg/IGRhdGFOb2Rlc1tpXS5uYW1lLnN1YnN0cmluZygwLDgpICsgJy4uJzpkYXRhTm9kZXNbaV0ubmFtZX19CiAgICAgICAgICA8L3RleHQ+CiAgICAgICAgPC9nPgogICAgICAgIDx0ZXh0IHYtZm9yID0gJyhkLGkpIGluIGNsdXN0ZXInCiAgICAgICAgOmtleSA9ICdpJwogICAgICAgIDpkeCA9ICdjbHVzdGVyLmxlbmd0aDw5PyhpKzAuNSkgKiAoNTAwL2NsdXN0ZXIubGVuZ3RoKSArIDIwICsgc3ZnQ29uZmlnLndpZHRoIC0gNjAwIDooaSswLjUpICogKDUwMC9jbHVzdGVyLmxlbmd0aCkgKyAxNyArIHN2Z0NvbmZpZy53aWR0aCAtIDYwMCcKICAgICAgICBkeSA9IDE2NQogICAgICAgIHRleHQtYW5jaG9yID0gJ21pZGRsZScKICAgICAgICBmb250LXdlaWdodCA9ICdib2xkJwogICAgICAgIDpmb250LXNpemUgPSAnY2x1c3Rlci5sZW5ndGg8OT8gMjQgOiAxNScKICAgICAgICBmaWxsID0gJ2JsYWNrJwogICAgICAgIEBtb3VzZW92ZXIgPSAnY2x1c3RlckhpZ2hsaWdodChpKScKICAgICAgICBAbW91c2VvdXQgPSAnb3V0ZXJPdXQoKScKICAgICAgICA+CiAgICAgICAgICAgIHt7aSsxfX0KICAgICAgICA8L3RleHQ+CiAgICAgICAgPHRleHQgCiAgICAgICAgOmR4ID0gJzEyMCtzdmdDb25maWcud2lkdGggLSA0NTAnCiAgICAgICAgZHkgPSAxMzUKICAgICAgICBmb250LXNpemUgPSAyNQogICAgICAgIGZvbnQtd2VpZ2h0ID0gJ2JvbGQnCiAgICAgICAgZmlsbCA9ICdibGFjaycKICAgICAgICB0ZXh0LWFuY2hvciA9ICdtaWRkbGUnPgogICAgICAgICAgY2x1c3RlcgogICAgICAgIDwvdGV4dD4KICAgICAgICA8dGV4dAogICAgICAgIDpkeCA9ICcxMjArc3ZnQ29uZmlnLndpZHRoIC0gNDUwJwogICAgICAgIGR5ID0gODM1CiAgICAgICAgZm9udC1zaXplID0gMjUKICAgICAgICBmb250LXdlaWdodCA9ICdib2xkJwogICAgICAgIGZpbGwgPSAnYmxhY2snCiAgICAgICAgdGV4dC1hbmNob3IgPSAnbWlkZGxlJz4KICAgICAgICAgIHdlaWdodAogICAgICAgIDwvdGV4dD4KICAgICAgPC9nPiAtLT4KICAgICAgPGcgQGNsaWNrID0gJ2lubmVyTGlua0ZsYWcgPSAhaW5uZXJMaW5rRmxhZyc+CiAgICAgICAgPHJlY3QgaWQgPSAnYnRuSW5kZXhMaW5rJwogICAgICAgIDp4ID0gJ3N2Z0NvbmZpZy53aWR0aCAtIDExMCcKICAgICAgICA6eSA9ICcyMCcKICAgICAgICA6ZmlsbCA9ICdpbm5lckxpbmtGbGFnPyAiIzVhZWFmMSI6ImxpZ2h0Z3JleSInPjwvcmVjdD4KICAgICAgICA8dGV4dAogICAgICAgIDpkeCA9ICdzdmdDb25maWcud2lkdGggLSA2NScKICAgICAgICA6ZHkgPSAnNDUnCiAgICAgICAgZmlsbCA9ICdibGFjaycKICAgICAgICB0ZXh0LWFuY2hvciA9ICdtaWRkbGUnPgogICAgICAgICAgaW5uZXIgbGluawogICAgICAgIDwvdGV4dD4KICAgICAgPC9nPgogICAgICAKICAgICAgPGcgQGNsaWNrID0gJ291dGVyTGlua0ZsYWcgPSAhb3V0ZXJMaW5rRmxhZyc+CiAgICAgICAgPHJlY3QgaWQgPSAnYnRuSW5kZXhMaW5rJwogICAgICAgIDp4ID0gJ3N2Z0NvbmZpZy53aWR0aCAtIDIxMCcKICAgICAgICA6eSA9ICcyMCcKICAgICAgICA6ZmlsbCA9ICdvdXRlckxpbmtGbGFnPyAiIzVhZWFmMSI6ImxpZ2h0Z3JleSInPjwvcmVjdD4KICAgICAgICA8dGV4dAogICAgICAgIDpkeCA9ICdzdmdDb25maWcud2lkdGggLSAxNjUnCiAgICAgICAgOmR5ID0gJzQ1JwogICAgICAgIGZpbGwgPSAnYmxhY2snCiAgICAgICAgdGV4dC1hbmNob3IgPSAnbWlkZGxlJz4KICAgICAgICAgIG91dGVyIGxpbmsKICAgICAgICA8L3RleHQ+CiAgICAgIDwvZz4KCiAgICAgIDxnIEBjbGljayA9ICd0aGlzLiRzdG9yZS5jb21taXQoImNoYW5nZVN0b3J5QnRuIiksCiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KHsKICAgICAgICAgIHR5cGU6YGNoYW5nZVN0b3J5VGV4dGAsCiAgICAgICAgICB0ZXh0OnN0b3J5VGVzdAogICAgICAgIH0pJz4KICAgICAgICA8cmVjdCBpZCA9ICdidG5JbmRleExpbmsnCiAgICAgICAgOnggPSAnc3ZnQ29uZmlnLndpZHRoIC0gMzEwJwogICAgICAgIDp5ID0gJzIwJwogICAgICAgIDpmaWxsID0gJ3RoaXMuJHN0b3JlLnN0YXRlLnN0b3J5LmJ0bj8gIiM1YWVhZjEiOiJsaWdodGdyZXkiJz48L3JlY3Q+CiAgICAgICAgPHRleHQKICAgICAgICA6ZHggPSAnc3ZnQ29uZmlnLndpZHRoIC0gMjY1JwogICAgICAgIDpkeSA9ICc0NScKICAgICAgICBmaWxsID0gJ2JsYWNrJwogICAgICAgIHRleHQtYW5jaG9yID0gJ21pZGRsZSc+CiAgICAgICAgICBTaG93IHN0b3J5CiAgICAgICAgPC90ZXh0PgogICAgICA8L2c+CiAgICAgIAogICAgPGcgaWQgPSAnZ3JhcGgnCiAgICA6dHJhbnNmb3JtID0gJyJ0cmFuc2xhdGUoIitbLXN2Z0NvbmZpZy53aWR0aCogMC4yLDBdKyIpIic+CiAgICAgIDxnIGlkID0gJ291dGVyTGlua3MnIHYtc2hvdyA9ICdvdXRlckxpbmtGbGFnJz4KICAgICAgICAKICAgICAgPC9nPgoKICAgICAgPGcgaWQgPSAnb3V0ZXJDaXJjbGUnIHYtaWYgPSAnYWN0aW9uTGlzdC5sZW5ndGg+NCc+CiAgIAogICAgICAgIDxwYXRoIHYtZm9yID0gJyhkLGkpIGluIGFyY0RhdGEnCiAgICAgICAgOmtleSA9ICdpJwogICAgICAgIDpkID0gJ2FyYyhkLGkpJwogICAgICAgIDpmaWxsID0gJ2QuY29sb3InCiAgICAgICAgZmlsbC1vcGFjaXR5ID0gJzAuOCcKICAgICAgICA6dHJhbnNmb3JtID0gIid0cmFuc2xhdGUoJytbc3ZnQ29uZmlnLndpZHRoLzIsc3ZnQ29uZmlnLmhlaWdodC8yXSsnKSciPiAKICAgICAgICA8L3BhdGg+CgogICAgICAgIDxjaXJjbGUgdi1mb3IgPSAnKGQsaSkgaW4gYWN0aW9uTm9kZXMnCiAgICAgICAgOmtleSA9ICdpJwogICAgICAgIDpjeCA9ICdkLnh5WzBdJwogICAgICAgIDpjeSA9ICdkLnh5WzFdJwogICAgICAgIHIgPSAxMAogICAgICAgIDpmaWxsID0gJ2NvbG9yKGQuZGF0YS52aWV3KScKICAgICAgICBzdHJva2UgPSAnd2hpdGUnCiAgICAgICAgQG1vdXNlb3ZlciA9ICdvdXRlclRpcChkKSwgb3V0ZXJIaWdobGlnaHQoZCknCiAgICAgICAgQG1vdXNlb3V0ID0gJ2hvdmVyLmZsYWcgPSBmYWxzZSwgb3V0ZXJPdXQoKScKICAgICAgICBAY2xpY2sgPSAncmVidWlsZFN0YXRlKGQuc3RhdGVzKSc+ICAKICAgICAgICA8L2NpcmNsZT4KICAgICAgICAKICAgICAgPC9nPgoKICAgICAgPGcgaWQgPSAnaW5uZXJMaW5rcycgdi1zaG93ID0gJ2lubmVyTGlua0ZsYWcnPgogICAgICAgICAgCiAgICAgICAgCiAgICAgIDwvZz4KCiAgICAgIDxnIGlkID0gJ2lubmVyR3JhcGgnID4KICAgICAgICAKICAgICAgPC9nPgogICAgICAKICAgICAgCiAgICA8L2c+CiAgICAKICAgICAgPGcgaWQgPSAndGlwJyB2LWlmID0gJ2hvdmVyLmZsYWcgJiYgaG92ZXIudHlwZSA9PSAib3V0ZXIiJz4KICAgICAgICAKICAgICAgICA8cmVjdCBoZWlnaHQgPSAxODAKICAgICAgICA6d2lkdGggPSAnaG92ZXIuZGF0YS5kYXRhLmRlc2MubGVuZ3RoPjIwPyhob3Zlci5kYXRhLmRhdGEuZGVzYy5sZW5ndGgrNCkgKjEyIDogMzAwJwogICAgICAgIGZpbGwgPSAnYmxhY2snCiAgICAgICAgZmlsbC1vcGFjaXR5ID0gMC43CiAgICAgICAgOnggPSAiWFlbMF0gKzEwIC0gc3ZnQ29uZmlnLndpZHRoICogMC4yIgogICAgICAgIDp5ID0gIlhZWzFdIC0gMzAiCiAgICAgICAgcnggPSAyMD4gIAogICAgICAgIDwvcmVjdD4KICAgICAgICAKICAgICAgICA8dGV4dCBmaWxsID0gJ3doaXRlJyA6ZHggPSAnWFlbMF0rMjAgLSB0aGlzLnN2Z0NvbmZpZy53aWR0aCowLjInIDpkeSA9ICdYWVsxXSAtIDUnPnt7aG92ZXIuZGF0YS5kYXRhLmRlc2N9fTwvdGV4dD4KICAgICAgICA8dGV4dCBmaWxsID0gJ3doaXRlJyA6ZHggPSAnWFlbMF0rMjAgLSB0aGlzLnN2Z0NvbmZpZy53aWR0aCowLjInIDpkeSA9ICdYWVsxXSArMTUnPkludGVyYWN0aW9uOiB7e2hvdmVyLmRhdGEuZGF0YS5vYmp9fTwvdGV4dD4KICAgICAgICA8dGV4dCBmaWxsID0gJ3doaXRlJyA6ZHggPSAnWFlbMF0rMjAtIHRoaXMuc3ZnQ29uZmlnLndpZHRoKjAuMicgOmR5ID0gJ1hZWzFdICszNSc+Vmlldzoge3sgaG92ZXIuZGF0YS5kYXRhLnZpZXcuc3Vic3RyaW5nKGhvdmVyLmRhdGEuZGF0YS52aWV3Lmxlbmd0aC0xLGhvdmVyLmRhdGEuZGF0YS52aWV3Lmxlbmd0aCl9fTwvdGV4dD4KICAgICAgICA8dGV4dCBmaWxsID0gJ3doaXRlJyA6ZHggPSAnWFlbMF0rMjAtIHRoaXMuc3ZnQ29uZmlnLndpZHRoKjAuMicgOmR5ID0gJ1hZWzFdICs1NSc+VGltZSBzdGFtcDoge3tob3Zlci5kYXRhLmRhdGEudGltZVN0YW1wLnRvRml4ZWQoMil9fTwvdGV4dD4KICAgICAgICAKICAgICAgICA8aW1nIDpzY3I9J2hvdmVyLmRhdGEuZGF0YS5waWMnLz4KCiAgICAgICAgPCEtLSA8dGV4dCA6ZHggPSAnWFlbMF0rMjAnIDpkeSA9ICdYWVsxXSArNTUnPnt7J2RhdGE6Jytob3Zlci5kYXRhLmRhdGF9fTwvdGV4dD4KICAgICAgICA8dGV4dCA6ZHggPSAnWFlbMF0rMjAnIDpkeSA9ICdYWVsxXSArNzUnPnt7J3R5cGU6JyArKGhvdmVyLmRhdGEubGFzdFRpbWU/KCJob3ZlciBmb3IgIitob3Zlci5kYXRhLmxhc3RUaW1lLnRvRml4ZWQoMikgKyAiIHNlY29uZHMiKToiY2xpY2siKX19PC90ZXh0PiAtLT4KICAgICAgPC9nPgogICAgICAKICAgICAgPGcgaWQgPSAndGlwJyB2LWlmID0gJ2hvdmVyLmZsYWcgJiYgaG92ZXIudHlwZSA9PSAiaW5uZXIiJz4KICAgICAgICA8cmVjdCBoZWlnaHQgPSAxMDAKICAgICAgICA6d2lkdGggPSAnaG92ZXIuZGF0YS5uYW1lLmxlbmd0aD4xMD8oaG92ZXIuZGF0YS5uYW1lLmxlbmd0aCs1KSAqMTUgKzEwOjIzMCcKICAgICAgICBmaWxsID0gJ2JsYWNrJwogICAgICAgIGZpbGwtb3BhY2l0eSA9IDAuNwogICAgICAgIDp4ID0gIlhZWzBdICsxMCIKICAgICAgICA6eSA9ICJYWVsxXSAtIDMwIgogICAgICAgIHJ4ID0gMjA+CiAgICAgICAgICAgCiAgICAgICAgPC9yZWN0PgoKICAgICAgICA8dGV4dCBmaWxsID0gJ3doaXRlJyA6ZHggPSAnWFlbMF0rMjAnIDpkeSA9ICdYWVsxXSAtIDUnPk5hbWU6IHt7aG92ZXIuZGF0YS5uYW1lfX08L3RleHQ+CiAgICAgICAgPHRleHQgZmlsbCA9ICd3aGl0ZScgOmR4ID0gJ1hZWzBdKzIwJyA6ZHkgPSAnWFlbMV0gKzE1Jz5UeXBlOiB7e2hvdmVyLmRhdGEudHlwZX19PC90ZXh0PgogICAgICAgIDx0ZXh0IGZpbGwgPSAnd2hpdGUnIDpkeCA9ICdYWVswXSsyMCcgOmR5ID0gJ1hZWzFdICszNSc+Q291bnQ6IHt7aG92ZXIuZGF0YS5jb3VudH19PC90ZXh0PgogICAgICAgIDx0ZXh0IGZpbGwgPSAnd2hpdGUnIDpkeCA9ICdYWVswXSsyMCcgOmR5ID0gJ1hZWzFdICs1NSc+RHVyYXRpb246IHt7aG92ZXIuZGF0YS5kdXJhfX08L3RleHQ+CiAgICAgICAgPCEtLSA8dGV4dCA6ZHggPSAnWFlbMF0rMjAnIDpkeSA9ICdYWVsxXSArNTUnPnt7J2RhdGE6Jytob3Zlci5kYXRhLmRhdGF9fTwvdGV4dD4KICAgICAgICA8dGV4dCA6ZHggPSAnWFlbMF0rMjAnIDpkeSA9ICdYWVsxXSArNzUnPnt7J3R5cGU6JyArKGhvdmVyLmRhdGEubGFzdFRpbWU/KCJob3ZlciBmb3IgIitob3Zlci5kYXRhLmxhc3RUaW1lLnRvRml4ZWQoMikgKyAiIHNlY29uZHMiKToiY2xpY2siKX19PC90ZXh0PiAtLT4KICAgICAgPC9nPgoJPC9zdmc+CgkK"},{"version":3,"sources":["C:\\Users\\admin\\Desktop\\WYSIWYG\\归档\\src\\components\\graphNew.vue"],"names":[],"mappings":"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CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACvC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAChjhC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1J,CAAC,CAAC,CAAC;;MAEH,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAChB,CAAC,EAAE,EAAE,CAAC,CAAC;;QAEP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzfile":"C:/Users/admin/Desktop/WYSIWYG/归档/src/components/graphNew.vue","sourceRoot":"","sourcesContent":["<template>\n\t\n\t<svg id = 'graphSvg' \n\t:height = 'svgConfig.height' :width = 'svgConfig.width'\n\t@click = 'log()'>\n      <!-- <g id = 'matrix'\n      transform = 'translate(0,-20)'>\n        <g class = 'weight' v-for = '(d,i) in cluster'\n        :key = 'i'>\n          <rect\n          :x = 'i * (500/cluster.length) + 5+20 + svgConfig.width - 600'\n          y = 725\n          :height = 'lenScale(getWeight(d))'\n          :width = '500/cluster.length-15'\n          fill = '#54f2f3'\n          rx = 5\n          \n          >\n          </rect>\n          <text\n          :dx = 'i * (500/cluster.length) + 5 +(500/cluster.length-15)/2 +20 + svgConfig.width - 600'\n          :dy = '740 + lenScale(getWeight(d))'\n          fill = 'black'\n          text-anchor = 'middle'\n          font-weight = 'bold'\n          font-size = 12\n          \n          >\n            {{(getWeight(d)/maxWeight).toFixed(2)}}\n          </text>\n        </g>\n        <g class = 'row' v-for = '(d,i) in community'\n        :key = 'i'>\n          <rect v-for = '(k,j) in d'\n          :key = 'j'\n          :x = 'j * (500/d.length) + 20 + svgConfig.width - 600'\n          :y = 'i * (550/community.length) + 20 + 150'\n          :height = '550/community.length - 5'\n          :width = '500/d.length-5'\n          :fill = 'k == 1?getColor(i,j):\"lightgrey\"'\n          stroke = 'white'\n          :stroke-width = 'cluster[j].nodes[0].index == i? 10:0'\n          stroke-dasharray = '4'\n          \n          >\n          </rect>\n          <text\n          :dx = 'svgConfig.width - 600 + 10'\n          :dy = '(i+0.5) * (550/community.length) + 25 + 150 '\n          text-anchor = 'end'\n          fill = 'black'\n          >\n            {{dataNodes[i].type == 'attribute'?dataNodes[i].name:dataNodes[i].name.length>=8? dataNodes[i].name.substring(0,8) + '..':dataNodes[i].name}}\n          </text>\n        </g>\n        <text v-for = '(d,i) in cluster'\n        :key = 'i'\n        :dx = 'cluster.length<9?(i+0.5) * (500/cluster.length) + 20 + svgConfig.width - 600 :(i+0.5) * (500/cluster.length) + 17 + svgConfig.width - 600'\n        dy = 165\n        text-anchor = 'middle'\n        font-weight = 'bold'\n        :font-size = 'cluster.length<9? 24 : 15'\n        fill = 'black'\n        @mouseover = 'clusterHighlight(i)'\n        @mouseout = 'outerOut()'\n        >\n            {{i+1}}\n        </text>\n        <text \n        :dx = '120+svgConfig.width - 450'\n        dy = 135\n        font-size = 25\n        font-weight = 'bold'\n        fill = 'black'\n        text-anchor = 'middle'>\n          cluster\n        </text>\n        <text\n        :dx = '120+svgConfig.width - 450'\n        dy = 835\n        font-size = 25\n        font-weight = 'bold'\n        fill = 'black'\n        text-anchor = 'middle'>\n          weight\n        </text>\n      </g> -->\n      <g @click = 'innerLinkFlag = !innerLinkFlag'>\n        <rect id = 'btnIndexLink'\n        :x = 'svgConfig.width - 110'\n        :y = '20'\n        :fill = 'innerLinkFlag? \"#5aeaf1\":\"lightgrey\"'></rect>\n        <text\n        :dx = 'svgConfig.width - 65'\n        :dy = '45'\n        fill = 'black'\n        text-anchor = 'middle'>\n          inner link\n        </text>\n      </g>\n      \n      <g @click = 'outerLinkFlag = !outerLinkFlag'>\n        <rect id = 'btnIndexLink'\n        :x = 'svgConfig.width - 210'\n        :y = '20'\n        :fill = 'outerLinkFlag? \"#5aeaf1\":\"lightgrey\"'></rect>\n        <text\n        :dx = 'svgConfig.width - 165'\n        :dy = '45'\n        fill = 'black'\n        text-anchor = 'middle'>\n          outer link\n        </text>\n      </g>\n\n      <g @click = 'this.$store.commit(\"changeStoryBtn\"),\n        this.$store.commit({\n          type:`changeStoryText`,\n          text:storyTest\n        })'>\n        <rect id = 'btnIndexLink'\n        :x = 'svgConfig.width - 310'\n        :y = '20'\n        :fill = 'this.$store.state.story.btn? \"#5aeaf1\":\"lightgrey\"'></rect>\n        <text\n        :dx = 'svgConfig.width - 265'\n        :dy = '45'\n        fill = 'black'\n        text-anchor = 'middle'>\n          Show story\n        </text>\n      </g>\n      \n    <g id = 'graph'\n    :transform = '\"translate(\"+[-svgConfig.width* 0.2,0]+\")\"'>\n      <g id = 'outerLinks' v-show = 'outerLinkFlag'>\n        \n      </g>\n\n      <g id = 'outerCircle' v-if = 'actionList.length>4'>\n   \n        <path v-for = '(d,i) in arcData'\n        :key = 'i'\n        :d = 'arc(d,i)'\n        :fill = 'd.color'\n        fill-opacity = '0.8'\n        :transform = \"'translate('+[svgConfig.width/2,svgConfig.height/2]+')'\"> \n        </path>\n\n        <circle v-for = '(d,i) in actionNodes'\n        :key = 'i'\n        :cx = 'd.xy[0]'\n        :cy = 'd.xy[1]'\n        r = 10\n        :fill = 'color(d.data.view)'\n        stroke = 'white'\n        @mouseover = 'outerTip(d), outerHighlight(d)'\n        @mouseout = 'hover.flag = false, outerOut()'\n        @click = 'rebuildState(d.states)'>  \n        </circle>\n        \n      </g>\n\n      <g id = 'innerLinks' v-show = 'innerLinkFlag'>\n          \n        \n      </g>\n\n      <g id = 'innerGraph' >\n        \n      </g>\n      \n      \n    </g>\n    \n      <g id = 'tip' v-if = 'hover.flag && hover.type == \"outer\"'>\n        \n        <rect height = 180\n        :width = 'hover.data.data.desc.length>20?(hover.data.data.desc.length+4) *12 : 300'\n        fill = 'black'\n        fill-opacity = 0.7\n        :x = \"XY[0] +10 - svgConfig.width * 0.2\"\n        :y = \"XY[1] - 30\"\n        rx = 20>  \n        </rect>\n        \n        <text fill = 'white' :dx = 'XY[0]+20 - this.svgConfig.width*0.2' :dy = 'XY[1] - 5'>{{hover.data.data.desc}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20 - this.svgConfig.width*0.2' :dy = 'XY[1] +15'>Interaction: {{hover.data.data.obj}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20- this.svgConfig.width*0.2' :dy = 'XY[1] +35'>View: {{ hover.data.data.view.substring(hover.data.data.view.length-1,hover.data.data.view.length)}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20- this.svgConfig.width*0.2' :dy = 'XY[1] +55'>Time stamp: {{hover.data.data.timeStamp.toFixed(2)}}</text>\n        \n        <img :scr='hover.data.data.pic'/>\n\n        <!-- <text :dx = 'XY[0]+20' :dy = 'XY[1] +55'>{{'data:'+hover.data.data}}</text>\n        <text :dx = 'XY[0]+20' :dy = 'XY[1] +75'>{{'type:' +(hover.data.lastTime?(\"hover for \"+hover.data.lastTime.toFixed(2) + \" seconds\"):\"click\")}}</text> -->\n      </g>\n      \n      <g id = 'tip' v-if = 'hover.flag && hover.type == \"inner\"'>\n        <rect height = 100\n        :width = 'hover.data.name.length>10?(hover.data.name.length+5) *15 +10:230'\n        fill = 'black'\n        fill-opacity = 0.7\n        :x = \"XY[0] +10\"\n        :y = \"XY[1] - 30\"\n        rx = 20>\n           \n        </rect>\n\n        <text fill = 'white' :dx = 'XY[0]+20' :dy = 'XY[1] - 5'>Name: {{hover.data.name}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20' :dy = 'XY[1] +15'>Type: {{hover.data.type}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20' :dy = 'XY[1] +35'>Count: {{hover.data.count}}</text>\n        <text fill = 'white' :dx = 'XY[0]+20' :dy = 'XY[1] +55'>Duration: {{hover.data.dura}}</text>\n        <!-- <text :dx = 'XY[0]+20' :dy = 'XY[1] +55'>{{'data:'+hover.data.data}}</text>\n        <text :dx = 'XY[0]+20' :dy = 'XY[1] +75'>{{'type:' +(hover.data.lastTime?(\"hover for \"+hover.data.lastTime.toFixed(2) + \" seconds\"):\"click\")}}</text> -->\n      </g>\n\t</svg>\n\t\n</template>\n\n<script>\n\timport * as d3 from \"d3\"\n  \n\texport default{\n\t\tname:'graphNew',\n    \n\t\tdata(){\n\t\t\treturn{\n\t\t\t\tcolor:d3.scale.category10(),\n\t\t\t\tsvgConfig:{\n\t\t\t\t\theight:this.$store.state.height * 0.95,\n\t\t\t\t\twidth:this.$store.state.width * 0.95,\n\t\t\t\t\tbackgroundColor:\"black\",\n\t\t\t\t\topacity:0.8,\n\t\t\t\t},\n        innerLinkFlag:true,\n        outerLinkFlag:true,\n        hover:{\n          flag:false,\n          data:{},\n          type:'inner'\n        },\n        // statesSelected:{\n        //   selected:'',\n        //   leaf:''\n        // },\n        XY:[],\n        storyBtn :false\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t},\n\t\tmounted(){\n      \n\t\t},\n\t\tcomputed:{\n      nCluster(){\n        let sol = []\n        for(let i = 0;i<this.cluster.length;i++){\n          let t = this.cluster[i]\n          let tmp = {}\n          tmp['nodes'] = t.nodes\n          tmp['count'] = t.count\n          tmp['time'] = t.time\n          if(this.diction[i]>=0){\n            tmp['desc'] = this.diction[i]\n          }\n          else{\n            tmp['desc'] = null\n          }\n          sol.push(tmp)\n        }\n        return sol\n      },\n\n      diction(){\n        let sol = {}\n        for(let i = 0;i<this.cluster.length;i++){\n          let t = this.cluster[i].nodes\n          if(t.length<5){\n            let tmp = []\n            \n            for(let j of t){\n              tmp.push(j.name)\n            }\n            //console.log(tmp)\n            for(let j = 0;j<this.actToData.length;j++){\n              let res = true\n              //console.log(tmp,this.actToData[j])\n              for(let k of this.actToData[j]){\n                \n                if( tmp.indexOf(k)  === -1){\n                  res = false\n                }\n              }\n              \n              if(res == true){\n                sol[i] = j\n                break\n              }\n            }\n\n          }\n        }\n        return sol\n      },\n\n      actToData(){\n        let sol = []\n        //console.log(this.actionNodes)\n        for(let i = 0;i<this.actionNodes.length;i++){\n          let t = this.actionNodes[i].data.data\n          let tmp = []\n          \n          if(t.attribute){\n            tmp.push(t.attribute)\n          }\n          if(t.industry){\n            tmp.push(t.industry)\n          }\n          for(let j of t.company){\n            tmp.push(j)\n          }\n          for(let j of t.province){\n            tmp.push(j)\n          }\n          sol.push(tmp)\n        }\n        return sol\n      },\n\n      imgStory(){\n        let sol = []\n        for(let i = 0;i<this.actionNodes.length;i++){\n          sol.push(this.actionNodes[i].data.desc)\n        }\n        return sol\n      },\n\n      storyTest(){\n        let story = []\n        for(let i = 0;i<this.newCluster.length;i++){\n          if(i === 0){\n            let tmp = {}\n            let a1 = this.getStory(this.newCluster[i].parent)\n            let first\n            if(a1.length == 1){\n            first = \"The user is most concerned about \" + a1[0] + '.'\n            }\n            else if(a1.length == 2){\n            first = \"The user is most concerned about \" + a1[0] + ' and ' + a1[1] +  '.'\n            }\n            tmp['main'] = first\n            tmp['sub'] = []\n            for(let j = 0;j<this.newCluster[i].son.length;j++){\n              let t = this.newCluster[i].son[j]\n              if(t.desc>=0){\n                tmp['sub'].push({id:t.desc,desc:this.imgStory[t.desc]})\n              }\n              \n            }\n            story.push(tmp)\n          }\n          else if(i >= 1){\n            let tmp = {}\n            let a1 = this.getStory(this.newCluster[i].parent)\n            let first\n            if(a1.length == 1){\n            first = \"The user is also concerned about \" + a1[0] + '.'\n            }\n            else if(a1.length == 2){\n            first = \"The user is also concerned about \" + a1[0] + ' and ' + a1[1] +  '.'\n            }\n            tmp['main'] = first\n            tmp['sub'] = []\n            for(let j = 0;j<this.newCluster[i].son.length;j++){\n              let t = this.newCluster[i].son[j]\n              if(t.desc>=0){\n                tmp['sub'].push({id:t.desc,desc:this.imgStory[t.desc]})\n              }\n              \n            }\n            story.push(tmp)\n          }\n        }\n        return story\n      },\n\n      storyPieces(){\n        let sol = []\n        for(let i = 0;i<this.cluster.length;i++){\n          sol.push(this.getStory(this.cluster[i]))\n        }\n        return sol\n      },\n      newCluster(){\n        let sol = []\n        let tmp2 = []\n        for(let i = 0;i<this.nCluster.length-1;i++){\n          let tmp = []\n          for(let j = i+1;j<this.nCluster.length;j++){\n            if(this.judgeSub(this.nCluster[i],this.nCluster[j])){\n              tmp.push(this.nCluster[j])\n              tmp2.push(j)\n            }\n          }\n          if(tmp2.indexOf(i) == -1){\n            sol.push({parent:this.nCluster[i],son:tmp})\n          }\n        }\n        return sol\n      },\n\n      lenScale(){\n        return d3.scale.linear().domain([0,this.maxWeight]).range([5,75])\n      },\n\n      maxWeight(){\n        \n        let maxi = 0\n        for(let i = 0;i<this.cluster.length;i++){\n          let weight = this.getWeight(this.cluster[i])\n          if(weight > maxi){\n            maxi = weight\n          }\n        }\n        return maxi\n      },\n\n      linkDistance(){\n        if (this.dataNodes.length < 10){\n          return 200\n        }\n        else if(this.dataNodes.length < 20){\n          return 150\n        }\n        else if(this.dataNodes.length< 30){\n          return 100\n        }\n        else{\n          return 50\n        }\n      },\n\n      community(){\n        let sol  = []\n        for(let i = 0;i<this.dataNodes.length;i++){\n          let tmp = []\n          for(let j = 0;j<this.cluster.length;j++){\n            tmp.push(0)\n          }\n          sol.push(tmp)\n        }\n        for(let i = 0;i<this.cluster.length;i++){\n          for(let j = 0;j<this.cluster[i].nodes.length;j++){\n            let row = this.cluster[i].nodes[j].index\n            let col = i\n            sol[row][col] = 1\n          }\n        }\n        return sol\n      },\n\n      cluster(){\n        let sol = []\n        let ref = []\n        \n        for(let i = 0;i<this.dataNodes.length;i++){\n          let provFlag = false\n          let compFlag = false\n          if(this.dataNodes[i].type != 'attribute'){\n          //if(this.dataNodes[i].name != 'patent_num' && this.dataNodes[i].name != 'proportion' && this.dataNodes[i].name != 'comparison'){\n            let tmp = [this.dataNodes[i]]\n            let sumTime = this.dataNodes[i].dura\n            let sumCount = this.dataNodes[i].count\n            let tmp2 = [i]\n            for(let j = 0;j<this.dataLinks.length;j++){\n              if(this.dataLinks[j].i == i){\n                if(this.dataNodes[this.dataLinks[j].j].type == 'company'){\n                  compFlag = true\n                }\n                if(this.dataNodes[this.dataLinks[j].j].type == 'province'){\n                  provFlag = true\n                }\n                tmp.push(this.dataNodes[this.dataLinks[j].j])\n                tmp2.push(this.dataLinks[j].j)\n                sumTime+=this.dataNodes[this.dataLinks[j].j].dura\n                sumCount+=this.dataNodes[this.dataLinks[j].j].count\n              }\n              if(this.dataLinks[j].j == i){\n                if(this.dataNodes[this.dataLinks[j].i].type == 'company'){\n                  compFlag = true\n                }\n                if(this.dataNodes[this.dataLinks[j].i].type == 'province'){\n                  provFlag = true\n                }\n                tmp.push(this.dataNodes[this.dataLinks[j].i])\n                tmp2.push(this.dataLinks[j].i)\n                sumTime+=this.dataNodes[this.dataLinks[j].i].dura\n                sumCount+=this.dataNodes[this.dataLinks[j].j].count\n              }\n              \n            }\n            tmp2.sort()\n            let st = tmp2.join('+')\n            if(ref.indexOf(st) == -1 && !(compFlag && provFlag)){\n              ref.push(st)\n              sol.push({nodes:tmp,count:sumCount,time:sumTime})\n            }\n            \n          }\n          \n          \n        }\n        sol.sort((a,b)=>{\n          return this.getWeight(b) - this.getWeight(a)\n        })\n        return sol\n      },\n\n      adjMatrix(){\n        let sol = []\n        let n = this.dataNodes.length\n        var getWeight = (i,j,links)=>{\n          if(i == j){\n            return 0\n          }\n          for(let k = 0;k<links.length;k++){\n            if((links[k].i == i && links[k].j == j)||\n            (links[k].i == j && links[k].j == i)){\n              return links[k].weight\n            }\n          }\n          return 0\n        }\n        for(let i = 0;i<n;i++){\n          let vector = []\n          for(let j = 0;j<n;j++){\n            vector.push(getWeight(i,j,this.dataLinks))\n          }\n          sol.push(vector)\n        }\n        return sol\n        \n      },\n      arc(){\n        return d3.svg.arc().outerRadius(this.svgConfig.height/2-18) \n                        .innerRadius(this.svgConfig.height/2-22);\n      },\n\n      // 外圈弧长的数据\n      arcData(){\n        let endR = Math.PI * 2  * 350/360\n        let endT = this.actionList[this.actionList.length-1].timeStamp\n        let sol = []\n        for(let i = 0;i<this.actionList.length-1;i++){\n          \n          sol.push({\n            startAngle:this.actionList[i].timeStamp/endT * endR,\n            endAngle:this.actionList[i+1].timeStamp/endT *endR,\n            color:this.color(this.actionList[i].view)\n          })\n        }\n        return sol\n        /* var data = [ \n            {startAngle: 0, endAngle: 0.1 * endAngle},\n            {startAngle: 0.1 * endAngle, endAngle: 0.2 * endAngle},\n            {startAngle: 0.2 * endAngle, endAngle: 0.4 * endAngle},\n            {startAngle: 0.4 * endAngle, endAngle: 0.6 * endAngle},        \n            {startAngle: 0.6 * endAngle, endAngle: 0.7 * endAngle},        \n            {startAngle: 0.7 * endAngle, endAngle: 0.9 * endAngle},        \n            {startAngle: 0.9 * endAngle, endAngle: endAngle}\n        ]; */\n      },\n      force(){\n          return d3.layout.force()\n            .size([this.svgConfig.width,this.svgConfig.height])\n            .on(\"tick\",this.tick)\n            .gravity(0.1)\n            .charge(-1000)\n            .friction(0.85)\n      },\n\t\t\tactionList(){\n\t\t\t\treturn this.$store.state.user.actionList\n\t\t\t},\n      visualStates(){\n        return this.$store.state.visualStates\n      },\n      visualList(){\n        return this.$store.state.visualList\n      },\n      screenShot(){\n        return this.$store.state.screenShot\n      },\n      selected(){\n        return this.$store.state.selected\n      },\n\n\n      // 外圈的动作节点\n      actionNodes(){\n        if(this.actionList.length<2){\n          return []\n        }\n        else{\n          let center = [this.svgConfig.width/2,this.svgConfig.height/2]\n          let endT = this.actionList[this.actionList.length-1].timeStamp\n          let endR = Math.PI * 2  * 350/360\n          let R = this.svgConfig.height/2 - 20\n          var getPos = (data,outerRadius,endTime,endRadius)=>{\n            let alpha = (data.timeStamp )/(endTime) * endRadius\n            return [center[0] + outerRadius * Math.sin(alpha),\n            center[1] - outerRadius * Math.cos(alpha)]\n          }\n          let sol = []\n          for(let i = 0;i<this.actionList.length;i++){\n            sol.push({xy:getPos(this.actionList[i],R,endT,endR), data:this.actionList[i], states:this.visualList[i+1]})\n          }\n          return sol\n        }\n        \n        \n      },\n      dataNodes(){\n        let sol = []\n        if(this.actionList.length<2){\n          return sol\n        }\n        else{\n          let lst = []\n          for(let i = 0;i<this.actionList.length;i++){\n            if(this.actionList[i].data.industry!=''){\n                \n                lst.push({name:this.actionList[i].data.industry,type:'industry',\n                time:i < this.actionList.length-1?this.actionList[i+1].timeStamp - this.actionList[i].timeStamp:10})\n\n            }\n            if(this.actionList[i].data.company.length>0){\n              for(let j = 0;j<this.actionList[i].data.company.length;j++){\n                lst.push({name:this.actionList[i].data.company[j],type:'company',\n                time:i < this.actionList.length-1?this.actionList[i+1].timeStamp - this.actionList[i].timeStamp:10})\n              }\n            }\n            if(this.actionList[i].data.province.length>0){\n              for(let j = 0;j<this.actionList[i].data.province.length;j++){\n                lst.push({name:this.actionList[i].data.province[j],type:'province',\n                time:i < this.actionList.length-1?this.actionList[i+1].timeStamp - this.actionList[i].timeStamp:10})\n              }\n            }\n            if(this.actionList[i].data.attribute!=''){\n              lst.push({name:this.actionList[i].data.attribute,type:'attribute',\n              time:i < this.actionList.length-1?this.actionList[i+1].timeStamp - this.actionList[i].timeStamp:10})\n            }\n          }\n          // console.log(lst)\n          let tmp = []\n          var count = (str,arr)=>{\n            let c = 0\n            for(let i = 0;i<arr.length;i++){\n              if(arr[i].name == str){\n                c++\n              }\n            }\n            return c\n          }\n          \n          var dura = (str,arr)=>{\n            let c = 0\n            for(let i = 0;i<arr.length;i++){\n              if(arr[i].name == str){\n                c += arr[i].time\n              }\n            }\n            return parseFloat(c.toFixed(2))\n          }\n          \n          let ind = 0\n          for(let i = 0;i<lst.length;i++){\n            if(tmp.indexOf(lst[i].name) == -1){\n              tmp.push(lst[i].name)\n              sol.push({index:ind,name:lst[i].name,type:lst[i].type,count:count(lst[i].name,lst),dura:dura(lst[i].name,lst)})\n              ind++\n            }\n          }\n          return sol\n        }\n      },\n      dataNodes2(){\n        return this.dataNodes.length\n      },\n      dataLinks(){\n        let sol = []\n        if(this.actionList.length<2){\n          return []\n        }\n        else{\n          var judgeIn = (key1,key2,lst)=>{\n            for(let i = 0;i<lst.length;i++){\n              if((lst[i].source.name == key1 && lst[i].target.name == key2)\n              ||(lst[i].source.name == key2 && lst[i].target.name == key1)){\n                return i\n              }\n            }\n            return 'notIn'\n          }\n          var getIndex = (key,lst)=>{\n            for(let i = 0;i<lst.length;i++){\n              if(lst[i].name == key){\n                return i\n              }\n            }\n          }\n          for(let i = 0;i<this.actionNodes.length;i++){\n            let tmp = []\n            if(this.actionList[i].data.industry!=''){\n              tmp.push(this.actionList[i].data.industry)\n            }\n            if(this.actionList[i].data.company.length>0){\n              for(let j = 0;j<this.actionList[i].data.company.length;j++){\n                tmp.push(this.actionList[i].data.company[j])\n              }\n            }\n            if(this.actionList[i].data.province.length>0){\n              for(let j = 0;j<this.actionList[i].data.province.length;j++){\n                tmp.push(this.actionList[i].data.province[j])\n              }\n            }\n            if(this.actionList[i].data.attribute!=''){\n              tmp.push(this.actionList[i].data.attribute)\n            }\n            \n            for(let j = 0;j<tmp.length-1;j++){\n              for(let k = j+1;k<tmp.length;k++){\n                if(judgeIn(tmp[j],tmp[k],sol) == 'notIn' && tmp[j]!=tmp[k]){\n                  sol.push({source:this.dataNodes[getIndex(tmp[j],this.dataNodes)],\n                  target:this.dataNodes[getIndex(tmp[k],this.dataNodes)],\n                  weight:1,\n                  i:getIndex(tmp[j],this.dataNodes),\n                  j:getIndex(tmp[k],this.dataNodes)})\n                }\n                else{\n                  sol[judgeIn(tmp[j],tmp[k],sol)].weight++\n                }\n              }\n            }\n          }\n        }\n        return sol\n      },\n      interactionLinks(){\n        let sol = []\n        if(this.actionList.length<2){\n          return []\n        }\n        else{\n          var getIndex = (key,lst)=>{\n            for(let i = 0;i<lst.length;i++){\n              if(lst[i].name == key){\n                return i\n              }\n            }\n          }\n          for(let i = 0;i<this.actionNodes.length;i++){\n            let tmp = []\n            if(this.actionList[i].data.industry!=''){\n              tmp.push(this.actionList[i].data.industry)\n            }\n            if(this.actionList[i].data.company.length>0){\n              for(let j = 0;j<this.actionList[i].data.company.length;j++){\n                tmp.push(this.actionList[i].data.company[j])\n              }\n            }\n            if(this.actionList[i].data.province.length>0){\n              for(let j = 0;j<this.actionList[i].data.province.length;j++){\n                tmp.push(this.actionList[i].data.province[j])\n              }\n            }\n            if(this.actionList[i].data.attribute!=''){\n              tmp.push(this.actionList[i].data.attribute)\n            }\n            for(let j = 0;j<tmp.length;j++){\n              sol.push({\n                source:this.actionNodes[i],\n                target:this.dataNodes[getIndex(tmp[j],this.dataNodes)]\n              })\n            }\n            \n            \n          }\n          return sol\n        }\n      },\n\t\t\t\n\t\t},\n\t\tmethods:{\n      rebuildState(node){\n        this.$store.commit('showGraph')\n        this.$store.commit({\n          type: 'rebuildStates',\n          Aselected: node.Aselected,\n          Aleaf: node.Aleaf,\n\t\t\t\t\tBflare0 :node.Bflare0,\n\t\t\t\t\tBflare1 :node.Bflare1,\n\t\t\t\t\tBflareSum :node.BflareSum,\n\t\t\t\t\tBflareSum2 :node.BflareSum2,\n\t\t\t\t\tBflareSum3 :node.BflareSum3,\n          BtreeTypeFlag: node.BtreeTypeFlag,\n          Bsplited: node.Bsplited,\n          Bdepth: node.Bdepth,\n          BrootName: node.BrootName,\n          BtreeData: node.BtreeData\n        })\n        // this.\n      },\n      getStory(cluster){\n        //let company = []\n        //let province = []\n        let entity = []\n        let attribute = []\n        let industry = []\n        let comparison = []\n        \n        for(let i = 0;i<cluster.nodes.length;i++){\n          if(cluster.nodes[i].type == 'company'){\n            entity.push(cluster.nodes[i].name)\n          }\n          else if(cluster.nodes[i].type == 'province'){\n            entity.push(cluster.nodes[i].name)\n          }\n          else if(cluster.nodes[i].type == 'attribute'){\n            if(cluster.nodes[i].name == 'proportion'){\n              attribute.push('patent proportion')\n            }\n            else if(cluster.nodes[i].name == 'patent_num'){\n              attribute.push('patent number')\n            }\n            else{\n              comparison.push(cluster.nodes[i].name)\n            }\n            \n          }\n          else if(cluster.nodes[i].type == 'industry'){\n            industry.push(cluster.nodes[i].name)\n          }\n        }\n        \n        let wordEntity = ''\n        let wordIndustry = ''\n        let wordAttribute = ''\n        let wordComparison = ''\n        \n        if(attribute.length>0){\n          if(attribute.length==1){\n            wordAttribute = attribute[0]\n          }\n          else if(attribute.length == 2){\n            wordAttribute = attribute[0] + ' and ' + attribute[1]\n          }\n          else{\n            wordAttribute = attribute.join(', ')\n          }\n        }\n        \n        if(comparison.length>0){\n          if(comparison.length==1){\n            wordComparison = comparison[0]\n          }\n          else if(comparison.length == 2){\n            wordComparison = comparison[0] + ' and ' + comparison[1]\n          }\n          else{\n            wordComparison = comparison.join(', ')\n          }\n        }\n        if(entity.length>0){\n          if(entity.length==1){\n            wordEntity = entity[0]\n          }\n          else if(entity.length == 2){\n            wordEntity = entity[0] + ' and ' + entity[1]\n          }\n          else{\n            wordEntity = entity.join(', ')\n          }\n        }\n        \n        if(industry.length>0){\n          if(industry.length==1){\n            wordIndustry = industry[0]\n          }\n          else if(industry.length == 2){\n            wordIndustry = industry[0] + ' and ' + industry[1]\n          }\n          else{\n            wordIndustry = industry.join(', ')\n          }\n        }\n        let piece = []\n        if(wordComparison){\n          let text = wordComparison === \"similarity\" || wordComparison === \"complement\"? 'the ' + wordComparison + ' between ' + wordEntity : 'the ' + wordComparison + ' between ' + wordEntity + ' in ' + wordIndustry \n          piece.push(text)\n        }\n        if(wordAttribute){\n          let text = 'the ' + wordAttribute + ' of ' + wordEntity + ' in ' + wordIndustry \n          piece.push(text)\n        }\n        return piece\n        \n      },\n      judgeSub(parent,son){\n        //console.log('123123123',parent,son)\n        for(let i = 0;i< son.nodes.length;i++){\n          //console.log('12312331',i)\n          if(parent.nodes.indexOf(son.nodes[i]) == -1){\n            return false\n          }\n        }\n        return true\n      },\n      getColor(i,j){\n        let maxi = this.getWeight(this.cluster[j])\n        let maxi2 = 0\n        for(let k = 0;k<this.cluster[j].nodes.length;k++){\n          let tmp = this.cluster[j].nodes[k].count * 5 + this.cluster[j].nodes[k].dura\n          if(tmp > maxi2){\n            maxi2 = tmp\n          }\n        }\n        let scale = d3.scale.linear().domain([0,maxi2/maxi]).range(['#f8de85',\"#da0000\"])\n        return scale((this.dataNodes[i].count * 5 + this.dataNodes[i].dura)/maxi)\n      },\n      getWeight(clu){\n        return clu.count * 5 + clu.time\n      },\n      clusterHighlight(ind){\n        let indexList = []\n        for(let i = 0;i<this.community.length;i++){\n          if(this.community[i][ind] == 1){\n            indexList.push(i)\n          }\n        }\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>indexList.indexOf(d.index)==-1)\n        .style(\"fill-opacity\",0.3)\n        .style(\"stroke-opacity\",0.3)\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>indexList.indexOf(d.index)!=-1)\n        .style(\"fill-opacity\",1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>indexList.indexOf(k.source.index)!=-1 && indexList.indexOf(k.target.index)!=-1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>indexList.indexOf(k.source.index)==-1 || indexList.indexOf(k.target.index)==-1)\n        .style(\"stroke-opacity\",0)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>indexList.indexOf(k.target.index) != -1)\n        .style(\"stroke-opacity\",1)\n        .style(\"stroke-width\",2)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>indexList.indexOf(k.target.index) == -1)\n        .style(\"stroke-opacity\",0)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>indexList.indexOf(k.target.index) != -1)\n        .style(\"fill-opacity\",1)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>indexList.indexOf(k.target.index) == -1)\n        .style(\"fill-opacity\",0)\n        \n      },\n\n      outerTip(d){\n        \n        this.XY = [d.xy[0],d.xy[1]>this.svgConfig.height/2? d.xy[1]-30  : d.xy[1]+30]\n        this.hover.flag = true\n        this.hover.type = 'outer'\n        this.hover.data = d\n        // console.log(\"hover.data.data.pic\", this.hover.data.data.pic)\n      },\n\n      innerHighlight(d){\n        let tmp = [d.name]\n        \n        for(let i = 0;i<this.dataLinks.length;i++){\n          if(d.name == this.dataLinks[i].target.name){\n            tmp.push(this.dataLinks[i].source.name)\n          }\n          else if(d.name == this.dataLinks[i].source.name){\n            tmp.push(this.dataLinks[i].target.name)\n          }\n        }\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>tmp.indexOf(d.name)==-1)\n        .style(\"fill-opacity\",0.3)\n        .style(\"stroke-opacity\",0.3)\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>tmp.indexOf(d.name)!=-1)\n        .style(\"fill-opacity\",1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>tmp.indexOf(k.source.name)!=-1 && tmp.indexOf(k.target.name)!=-1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>tmp.indexOf(k.source.name)==-1 || tmp.indexOf(k.target.name)==-1)\n        .style(\"stroke-opacity\",0)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>k.target.name == d.name)\n        .style(\"stroke-opacity\",1)\n        .style(\"stroke-width\",2)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>k.target.name != d.name)\n        .style(\"stroke-opacity\",0)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>k.target.name == d.name)\n        .style(\"fill-opacity\",1)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>k.target.name != d.name)\n        .style(\"fill-opacity\",0)\n        \n        \n      },\n      outerHighlight(d){\n        let tmp = []\n        if(d.data.data.industry!=''){\n          tmp.push(d.data.data.industry)\n        }\n        if(d.data.data.company.length>0){\n          for(let j = 0;j<d.data.data.company.length;j++){\n            tmp.push(d.data.data.company[j])\n          }\n        }\n        if(d.data.data.province.length>0){\n          for(let j = 0;j<d.data.data.province.length;j++){\n            tmp.push(d.data.data.province[j])\n          }\n        }\n        if(d.data.data.attribute!=''){\n          tmp.push(d.data.data.attribute)\n        }\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>tmp.indexOf(d.name)==-1)\n        .style(\"fill-opacity\",0.3)\n        .style(\"stroke-opacity\",0.3)\n        \n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .filter(d=>tmp.indexOf(d.name)!=-1)\n        .style(\"fill-opacity\",1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>k.source.data.timeStamp == d.data.timeStamp)\n        .style(\"stroke-opacity\",1)\n        .style(\"stroke-width\",2)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .filter(k=>k.source.data.timeStamp != d.data.timeStamp)\n        .style(\"stroke-opacity\",0)\n       \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>k.source.data.timeStamp == d.data.timeStamp)\n        .style(\"fill-opacity\",1)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .filter(k=>k.source.data.timeStamp != d.data.timeStamp)\n        .style(\"fill-opacity\",0)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>tmp.indexOf(k.source.name)!=-1 && tmp.indexOf(k.target.name)!=-1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .filter(k=>tmp.indexOf(k.source.name)==-1 || tmp.indexOf(k.target.name)==-1)\n        .style(\"stroke-opacity\",0)\n        \n        \n        \n      },\n      outerOut(){\n        d3.select(\"#innerGraph\").selectAll(\"circle\")\n        .style(\"fill-opacity\",1)\n        .style(\"stroke-opacity\",1)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .style(\"stroke-opacity\",1)\n        .style(\"stroke-width\",2)\n        \n        d3.select(\"#outerLinks\").selectAll(\"line\")\n        .style(\"stroke-opacity\",1)\n        .style(\"stroke-width\",0.5)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        //.filter(k=>k.source.data.timeStamp == d.data.timeStamp)\n        .style(\"fill-opacity\",1)\n        \n      },\n\t\t\tgetAngle(point1,point2){\n\t\t\t\tlet sin = this.tri(point1,point2,\"sin\")\n\t\t\t\treturn Math.asin(sin)\n\t\t\t},\n\t\t\tgetPoint(point1,point2){\n\t\t\t\t\n\t\t\t\tlet r = 15,\n\t\t\t\tangle = Math.PI/9\n\t\t\t\tlet theta = this.getAngle(point1,point2)\n\t\t\t\t\n\t\t\t\tif(point1.xy[0]<point2.x){\n\t\t\t\t\ttheta = Math.PI-theta\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet theta1 = theta - angle,\n\t\t\t\ttheta2 = theta + angle,\n\t\t\t\tsin1 = Math.sin(theta1),\n\t\t\t\tsin2 = Math.sin(theta2),\n\t\t\t\tcos1 = Math.cos(theta1),\n\t\t\t\tcos2 = Math.cos(theta2)\n\t\t\t\t\n\t\t\t\tlet x  = this.getNewPos(point2,point1,-(10 + point2.count * 3) - 10)[0],\n\t\t\t\ty = this.getNewPos(point2,point1,-(10 + point2.count * 3)-10)[1]\n\t\t\t\tlet p1 = [x  + r * cos1,y + r * sin1],\n\t\t\t\tp2 = [x + r * cos2,y + r * sin2],\n\t\t\t\tp3 = [x,y]\n\t\t\t\treturn [p1,p2,p3]\n\t\t\t\t\n\t\t\t},\n\t\t\tlog(){\n\t\t\t\t// console.log('actNode',this.actionNodes)\n        // console.log('dataNode',this.dataNodes)\n        // console.log('dataLink',this.dataLinks)\n        // console.log('interLink',this.interactionLinks)\n        // console.log('arc',this.arcData)\n        // console.log('adjcent',this.adjMatrix)\n        // console.log('cluster',this.cluster)\n        // console.log('matrix',this.community)\n        // console.log('maxWeight',this.maxWeight)\n        // console.log('newCluster',this.newCluster)\n        // console.log('storyPieces',this.storyPieces)\n        // console.log('storyTest',this.storyTest)\n        // console.log('imgStory',this.imgStory)\n        // console.log('act2Data',this.actToData)\n        // console.log('dictionary',this.diction)\n        console.log('selected',this.selected)\n        console.log('actionList', this.actionList)\n        console.log('visualStates', this.visualStates)\n        console.log('visualList', this.visualList)\n        // console.log('screenShot',this.screenShot)\n        //this.createNodes()\n\t\t\t},\n\t\t\ttick(){\n\t\t\t\td3.select(\"#innerGraph\")\n\t\t\t\t.selectAll('circle')\n\t\t\t\t.attr(\"cx\",d=>d.x)\n\t\t\t\t.attr(\"cy\",d=>d.y)\n        \n        d3.select(\"#innerLinks\").selectAll(\"line\")\n        .attr(\"x1\",d=>d.source.x)\n        .attr(\"x2\",d=>d.target.x)\n        .attr(\"y1\",d=>d.source.y)\n        .attr(\"y2\",d=>d.target.y)\n        \n        d3.select(\"#outerLinks\").selectAll(\"line\")\n        .attr(\"x1\",d=>d.source.xy[0])\n        .attr(\"x2\",d=>this.getNewPos(d.target,d.source,-(10 + d.target.count * 3) - 10)[0])\n        .attr(\"y1\",d=>d.source.xy[1])\n        .attr(\"y2\",d=>this.getNewPos(d.target,d.source,-(10 + d.target.count * 3) - 10)[1])\n        \n        d3.select(\"#outerLinks\").selectAll(\"polygon\")\n        .attr(\"points\",d=>this.getPoint(d.source,d.target))\n\t\t\t},\n\t\t\ttri(point1,point2,type){\n       \n\t\t\t\tlet x1 = point1.xy[0],\n\t\t\t\tx2 = point2.x,\n\t\t\t\ty1 = point1.xy[1],\n\t\t\t\ty2 = point2.y,\n\t\t\t\ta = y1-y2,\n\t\t\t\tb = x1-x2,\n\t\t\t\tc =Math.sqrt( a*a + b*b)\n\t\t\t\tif(type == 'sin'){\n\t\t\t\t\treturn a/c\n\t\t\t\t}\n\t\t\t\telse if (type == 'cos'){\n\t\t\t\t\treturn b/c\n\t\t\t\t}\n\t\t\t\telse if(type == 'tan'){\n\t\t\t\t\treturn b==0? 0:a/b\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetNewPos(point1,point2,r){\n\t\t\t\t\n        \n\t\t\t\treturn [point1.x - r * this.tri(point2,point1,\"cos\"),point1.y - r * this.tri(point2,point1,\"sin\")]\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t},\n      createNodes(){\n        \n        this.force\n        .linkStrength(0.8)\n        .linkDistance(100)\n        .nodes(this.dataNodes)\n        .links(this.dataLinks)\n        .start();\n        \n        d3.select(\"#innerGraph\")\n        .selectAll(\"circle\")\n        .data(this.dataNodes)\n        .enter()\n        .append(\"circle\")\n        .call(this.force.drag)\n        \n        d3.select(\"#innerGraph\")\n        .selectAll(\"circle\")\n        .data(this.dataNodes)\n        .attr(\"class\",\"dots\")\n        .attr(\"r\",20)\n        .style(\"fill\",d=> this.color(d.type))\n        .style(\"stroke\",'white')\n        \n        \n        d3.select(\"#innerLinks\")\n        .selectAll(\"line\")\n        .data(this.dataLinks)\n        .enter()\n        .append(\"line\")\n        \n        d3.select(\"#innerLinks\")\n        .selectAll(\"line\")\n        .data(this.dataLinks)\n        .attr(\"stroke\",'red')\n        .attr('stroke-width',2)\n      }\n\t\t\t\n\t\t},\n\t\twatch:{\n\t\t\tdataNodes(){\n        this.force\n        .linkStrength(0.8)\n        .linkDistance(this.linkDistance)\n        .nodes(this.dataNodes)\n        .links(this.dataLinks)\n        .start();\n        \n        d3.select(\"#innerGraph\")\n        .selectAll(\"circle\")\n        .data(this.dataNodes)\n        .enter()\n        .append(\"circle\")\n        .call(this.force.drag)\n        \n        d3.select(\"#innerGraph\")\n        .selectAll(\"circle\")\n        .data(this.dataNodes)\n        .attr(\"r\",d=>10 + d.count * 3)\n        .style(\"fill\",d=> this.color(d.type))\n        .style(\"stroke\",'white')\n          .on(\"mouseover\",d=>{\n              this.hover.type = 'inner'\n              this.hover.flag = true\n              this.hover.data = d\n              //console.log(d)\n              this.innerHighlight(d)\n            \n          })\n          .on(\"mousemove\",()=>{\n            let wid = this.hover.data.name.length>10?(this.hover.data.name.length+5) * 10 +10:230\n            this.XY = [event.offsetX>this.svgConfig.width - wid -20? event.offsetX - wid -20: event.offsetX,event.offsetY]\n          })\n          .on(\"mouseout\",()=>{\n            \n              this.hover.flag = false;\n              this.hover.data = {}\n              this.outerOut()\n          });\n        \n        d3.select(\"#innerGraph\")\n        .selectAll(\"circle\")\n        .data(this.dataNodes)\n        .exit()\n        .remove()\n        \n        d3.select(\"#innerLinks\")\n        .selectAll(\"line\")\n        .data(this.dataLinks)\n        .enter()\n        .append(\"line\")\n        \n        d3.select(\"#innerLinks\")\n        .selectAll(\"line\")\n        .data(this.dataLinks)\n        .attr(\"stroke\",'red')\n        .attr('stroke-width',2)\n        \n        d3.select(\"#innerLinks\")\n        .selectAll(\"line\")\n        .data(this.dataLinks)\n        .exit()\n        .remove()\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .data(this.interactionLinks)\n        .enter()\n        .append(\"line\")\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .data(this.interactionLinks)\n        .attr(\"stroke\",'grey')\n        .attr('stroke-width',0.5)\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"line\")\n        .data(this.interactionLinks)\n        .exit()\n        .remove()\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .data(this.interactionLinks)\n        .enter()\n        .append(\"polygon\")\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .data(this.interactionLinks)\n        .attr('fill','grey')\n        \n        d3.select(\"#outerLinks\")\n        .selectAll(\"polygon\")\n        .data(this.interactionLinks)\n        .exit()\n        .remove()\n        /* <polygon v-if = 'getNewPos(d.source,d.target,15)[0]'\n        :points = 'getPoint(d.source,d.target)'\n        :fill = 'linksColor(d)'\n        :fill-opacity = 'linksOpacity(d)'>\n        </polygon> */\n        \n      }\n\t\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t}\n</script>\n\n<style>\n\t#graphSvg{\n\t\tposition:absolute;\n\t\tleft:50px;\n\t\ttop:70px;\n\t\tbackground-color: rgb(255, 255, 255);\n\t\topacity:1;\n\t\tborder: 5px solid rgb(199, 198, 198);\n    border-radius: 50px;\n\t}\n\t#btnIndexLink ,#btnLink{\n\t\tposition:absolute;\n\t\theight :40px;\n\t\twidth : 90px;\n\t\trx:10px;\n\t}\n</style>\n"]}]}